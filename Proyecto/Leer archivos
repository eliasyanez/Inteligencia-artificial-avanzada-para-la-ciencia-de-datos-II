{"cells":[{"cell_type":"markdown","metadata":{"id":"lywCrTV0Cnet"},"source":["Path de carpeta: /content/drive/My Drive/ITD/Int Artificial Avanzada/Parte 2/Pytorch/Proyecto"]},{"cell_type":"code","execution_count":1,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":29878,"status":"ok","timestamp":1732500227915,"user":{"displayName":"Elías Joaquín Yáñez Huerta","userId":"11326424779274297318"},"user_tz":360},"id":"WYpgkKmeCc-R","outputId":"d3467243-08ea-4e92-a3ac-0187da7565aa"},"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n","Test-1542969243754.csv\n","Test_Inpatientdata-1542969243754.csv.zip\n","Test_Outpatientdata-1542969243754.csv.zip\n","Train-1542865627584.csv\n","Train_Beneficiarydata-1542865627584.csv.zip\n","Train_Inpatientdata-1542865627584.csv.zip\n","Train_Outpatientdata-1542865627584.csv.zip\n","Test_Beneficiarydata-1542969243754.csv.zip\n","Leer archivos.ipynb\n","Documentación Fraude de Proveedores Médicos.gdoc\n"]}],"source":["import os\n","from google.colab import drive\n","\n","# Mount Google Drive\n","drive.mount('/content/drive')\n","\n","# Define la ruta a la carpeta\n","ruta_carpeta = '/content/drive/My Drive/ITD/Int Artificial Avanzada/Parte 2/Pytorch/Proyecto'\n","\n","# Obtén una lista de todos los archivos y carpetas dentro de la carpeta\n","elementos = os.listdir(ruta_carpeta)\n","\n","# Imprime la lista de archivos y carpetas\n","for elemento in elementos:\n","  print(elemento)"]},{"cell_type":"markdown","metadata":{"id":"9PlJ2CbXEA6i"},"source":["Nombres de archivos:\n","+ Test-1542969243754.csv\n","+ Test_Inpatientdata-1542969243754.csv.zip\n","+ Test_Outpatientdata-1542969243754.csv.zip\n","+ Train-1542865627584.csv\n","+ Train_Beneficiarydata-1542865627584.csv.zip\n","+ Train_Inpatientdata-1542865627584.csv.zip\n","+ Train_Outpatientdata-1542865627584.csv.zip\n","+ Test_Beneficiarydata-1542969243754.csv.zip\n","+ Leer archivos.ipynb"]},{"cell_type":"code","execution_count":2,"metadata":{"executionInfo":{"elapsed":19611,"status":"ok","timestamp":1732500247516,"user":{"displayName":"Elías Joaquín Yáñez Huerta","userId":"11326424779274297318"},"user_tz":360},"id":"nIiK4oPuFJqe"},"outputs":[],"source":["import pandas as pd\n","import zipfile\n","import os\n","\n","# Define la ruta a la carpeta\n","ruta_carpeta = '/content/drive/My Drive/ITD/Int Artificial Avanzada/Parte 2/Pytorch/Proyecto'\n","\n","# Función para leer un archivo CSV o un CSV dentro de un ZIP\n","def leer_archivo(ruta_archivo):\n","  if ruta_archivo.endswith('.csv'):\n","    return pd.read_csv(ruta_archivo)\n","  elif ruta_archivo.endswith('.zip'):\n","    with zipfile.ZipFile(ruta_archivo, 'r') as zip_ref:\n","      nombre_archivo_csv = zip_ref.namelist()[0]\n","      with zip_ref.open(nombre_archivo_csv) as archivo_csv:\n","        return pd.read_csv(archivo_csv)\n","  else:\n","    return None  # Ignorar archivos que no sean CSV o ZIP\n","\n","# Leer todos los archivos en la carpeta\n","dataframes = {}\n","for elemento in os.listdir(ruta_carpeta):\n","  ruta_archivo = os.path.join(ruta_carpeta, elemento)\n","  df = leer_archivo(ruta_archivo)\n","  if df is not None:\n","    dataframes[elemento] = df"]},{"cell_type":"markdown","metadata":{"id":"KbWny1F6FgaY"},"source":["# Train-1542865627584.csv"]},{"cell_type":"code","execution_count":3,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"executionInfo":{"elapsed":54,"status":"ok","timestamp":1732500247518,"user":{"displayName":"Elías Joaquín Yáñez Huerta","userId":"11326424779274297318"},"user_tz":360},"id":"mytGDiHdFkg5","outputId":"163311cc-7d37-4b85-c772-b93598b610bf"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Provider PotentialFraud\n","0  PRV51001             No\n","1  PRV51003            Yes\n","2  PRV51004             No\n","3  PRV51005            Yes\n","4  PRV51007             No"],"text/html":["\n","  <div id=\"df-639004c4-0df5-462f-8a49-3a004ec40388\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Provider</th>\n","      <th>PotentialFraud</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>PRV51001</td>\n","      <td>No</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>PRV51003</td>\n","      <td>Yes</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>PRV51004</td>\n","      <td>No</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>PRV51005</td>\n","      <td>Yes</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>PRV51007</td>\n","      <td>No</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-639004c4-0df5-462f-8a49-3a004ec40388')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-639004c4-0df5-462f-8a49-3a004ec40388 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-639004c4-0df5-462f-8a49-3a004ec40388');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-195f5bc3-1130-401d-b032-58c18a388649\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-195f5bc3-1130-401d-b032-58c18a388649')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-195f5bc3-1130-401d-b032-58c18a388649 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"#df_train\",\n  \"rows\": 5,\n  \"fields\": [\n    {\n      \"column\": \"Provider\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"PRV51003\",\n          \"PRV51007\",\n          \"PRV51004\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"PotentialFraud\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Yes\",\n          \"No\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":3}],"source":["# Accede al DataFrame 'Train-1542865627584.csv'\n","df_train_target = dataframes['Train-1542865627584.csv']\n","\n","# Visualiza las primeras 5 filas\n","df_train_target.head()\n","\n","# Visualiza información general del DataFrame (tipos de datos, valores no nulos, etc.)\n","#df_train.info()\n","\n","# Visualiza estadísticas descriptivas de las columnas numéricas\n","#df_train.describe()"]},{"cell_type":"code","execution_count":4,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":54,"status":"ok","timestamp":1732500247522,"user":{"displayName":"Elías Joaquín Yáñez Huerta","userId":"11326424779274297318"},"user_tz":360},"id":"cReLpXe4buhP","outputId":"76eb3957-c465-4aaa-af84-71b03a26dc59"},"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 5410 entries, 0 to 5409\n","Data columns (total 2 columns):\n"," #   Column          Non-Null Count  Dtype \n","---  ------          --------------  ----- \n"," 0   Provider        5410 non-null   object\n"," 1   PotentialFraud  5410 non-null   object\n","dtypes: object(2)\n","memory usage: 84.7+ KB\n"]}],"source":["# Visualiza información general del DataFrame (tipos de datos, valores no nulos, etc.)\n","df_train_target.info()"]},{"cell_type":"markdown","metadata":{"id":"7dfhplV8GVjE"},"source":["Columnas: Provider\tPotentialFraud\n","\n","+ 0\tPRV51001\tNo\n","+ 1\tPRV51003\tYes\n","+ 2\tPRV51004\tNo\n","+ 3\tPRV51005\tYes\n","+ 4\tPRV51007\tNo"]},{"cell_type":"markdown","metadata":{"id":"5pyCBDZsHvqS"},"source":["# Train_Beneficiarydata-1542865627584.csv.zip"]},{"cell_type":"code","execution_count":5,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":342},"executionInfo":{"elapsed":50,"status":"ok","timestamp":1732500247523,"user":{"displayName":"Elías Joaquín Yáñez Huerta","userId":"11326424779274297318"},"user_tz":360},"id":"T9c1yjGSHyOg","outputId":"cc33fc1a-ec6a-46f3-ea1b-2446cc88c767"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["      BeneID         DOB  DOD  Gender  Race RenalDiseaseIndicator  State  \\\n","0  BENE11001  1943-01-01  NaN       1     1                     0     39   \n","1  BENE11002  1936-09-01  NaN       2     1                     0     39   \n","2  BENE11003  1936-08-01  NaN       1     1                     0     52   \n","3  BENE11004  1922-07-01  NaN       1     1                     0     39   \n","4  BENE11005  1935-09-01  NaN       1     1                     0     24   \n","\n","   County  NoOfMonths_PartACov  NoOfMonths_PartBCov  ...  \\\n","0     230                   12                   12  ...   \n","1     280                   12                   12  ...   \n","2     590                   12                   12  ...   \n","3     270                   12                   12  ...   \n","4     680                   12                   12  ...   \n","\n","   ChronicCond_Depression  ChronicCond_Diabetes  ChronicCond_IschemicHeart  \\\n","0                       1                     1                          1   \n","1                       2                     2                          2   \n","2                       2                     2                          1   \n","3                       2                     1                          1   \n","4                       2                     1                          2   \n","\n","   ChronicCond_Osteoporasis  ChronicCond_rheumatoidarthritis  \\\n","0                         2                                1   \n","1                         2                                2   \n","2                         2                                2   \n","3                         1                                1   \n","4                         2                                2   \n","\n","   ChronicCond_stroke  IPAnnualReimbursementAmt  IPAnnualDeductibleAmt  \\\n","0                   1                     36000                   3204   \n","1                   2                         0                      0   \n","2                   2                         0                      0   \n","3                   2                         0                      0   \n","4                   2                         0                      0   \n","\n","   OPAnnualReimbursementAmt  OPAnnualDeductibleAmt  \n","0                        60                     70  \n","1                        30                     50  \n","2                        90                     40  \n","3                      1810                    760  \n","4                      1790                   1200  \n","\n","[5 rows x 25 columns]"],"text/html":["\n","  <div id=\"df-720f76c6-c9b7-4e78-a16f-9616e37e9ce7\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>BeneID</th>\n","      <th>DOB</th>\n","      <th>DOD</th>\n","      <th>Gender</th>\n","      <th>Race</th>\n","      <th>RenalDiseaseIndicator</th>\n","      <th>State</th>\n","      <th>County</th>\n","      <th>NoOfMonths_PartACov</th>\n","      <th>NoOfMonths_PartBCov</th>\n","      <th>...</th>\n","      <th>ChronicCond_Depression</th>\n","      <th>ChronicCond_Diabetes</th>\n","      <th>ChronicCond_IschemicHeart</th>\n","      <th>ChronicCond_Osteoporasis</th>\n","      <th>ChronicCond_rheumatoidarthritis</th>\n","      <th>ChronicCond_stroke</th>\n","      <th>IPAnnualReimbursementAmt</th>\n","      <th>IPAnnualDeductibleAmt</th>\n","      <th>OPAnnualReimbursementAmt</th>\n","      <th>OPAnnualDeductibleAmt</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>BENE11001</td>\n","      <td>1943-01-01</td>\n","      <td>NaN</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>39</td>\n","      <td>230</td>\n","      <td>12</td>\n","      <td>12</td>\n","      <td>...</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>36000</td>\n","      <td>3204</td>\n","      <td>60</td>\n","      <td>70</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>BENE11002</td>\n","      <td>1936-09-01</td>\n","      <td>NaN</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>39</td>\n","      <td>280</td>\n","      <td>12</td>\n","      <td>12</td>\n","      <td>...</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>30</td>\n","      <td>50</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>BENE11003</td>\n","      <td>1936-08-01</td>\n","      <td>NaN</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>52</td>\n","      <td>590</td>\n","      <td>12</td>\n","      <td>12</td>\n","      <td>...</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>90</td>\n","      <td>40</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>BENE11004</td>\n","      <td>1922-07-01</td>\n","      <td>NaN</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>39</td>\n","      <td>270</td>\n","      <td>12</td>\n","      <td>12</td>\n","      <td>...</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1810</td>\n","      <td>760</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>BENE11005</td>\n","      <td>1935-09-01</td>\n","      <td>NaN</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>24</td>\n","      <td>680</td>\n","      <td>12</td>\n","      <td>12</td>\n","      <td>...</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1790</td>\n","      <td>1200</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows × 25 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-720f76c6-c9b7-4e78-a16f-9616e37e9ce7')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-720f76c6-c9b7-4e78-a16f-9616e37e9ce7 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-720f76c6-c9b7-4e78-a16f-9616e37e9ce7');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-3d7db0e1-ead7-4282-88c4-ba377895d1fe\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-3d7db0e1-ead7-4282-88c4-ba377895d1fe')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-3d7db0e1-ead7-4282-88c4-ba377895d1fe button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe"}},"metadata":{},"execution_count":5}],"source":["# Accede al DataFrame 'Train_Beneficiarydata-1542865627584.csv.zip'\n","df_train_beneficiary = dataframes['Train_Beneficiarydata-1542865627584.csv.zip']\n","\n","# Visualiza las primeras 5 filas\n","df_train_beneficiary.head()\n","\n","# Visualiza información general del DataFrame (tipos de datos, valores no nulos, etc.)\n","#df_train.info()\n","\n","# Visualiza estadísticas descriptivas de las columnas numéricas\n","#df_train.describe()"]},{"cell_type":"code","execution_count":6,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":48,"status":"ok","timestamp":1732500247524,"user":{"displayName":"Elías Joaquín Yáñez Huerta","userId":"11326424779274297318"},"user_tz":360},"id":"lFA3sURAcWBO","outputId":"0b02a27b-614c-4169-a0c6-1d58d9f53710"},"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 138556 entries, 0 to 138555\n","Data columns (total 25 columns):\n"," #   Column                           Non-Null Count   Dtype \n","---  ------                           --------------   ----- \n"," 0   BeneID                           138556 non-null  object\n"," 1   DOB                              138556 non-null  object\n"," 2   DOD                              1421 non-null    object\n"," 3   Gender                           138556 non-null  int64 \n"," 4   Race                             138556 non-null  int64 \n"," 5   RenalDiseaseIndicator            138556 non-null  object\n"," 6   State                            138556 non-null  int64 \n"," 7   County                           138556 non-null  int64 \n"," 8   NoOfMonths_PartACov              138556 non-null  int64 \n"," 9   NoOfMonths_PartBCov              138556 non-null  int64 \n"," 10  ChronicCond_Alzheimer            138556 non-null  int64 \n"," 11  ChronicCond_Heartfailure         138556 non-null  int64 \n"," 12  ChronicCond_KidneyDisease        138556 non-null  int64 \n"," 13  ChronicCond_Cancer               138556 non-null  int64 \n"," 14  ChronicCond_ObstrPulmonary       138556 non-null  int64 \n"," 15  ChronicCond_Depression           138556 non-null  int64 \n"," 16  ChronicCond_Diabetes             138556 non-null  int64 \n"," 17  ChronicCond_IschemicHeart        138556 non-null  int64 \n"," 18  ChronicCond_Osteoporasis         138556 non-null  int64 \n"," 19  ChronicCond_rheumatoidarthritis  138556 non-null  int64 \n"," 20  ChronicCond_stroke               138556 non-null  int64 \n"," 21  IPAnnualReimbursementAmt         138556 non-null  int64 \n"," 22  IPAnnualDeductibleAmt            138556 non-null  int64 \n"," 23  OPAnnualReimbursementAmt         138556 non-null  int64 \n"," 24  OPAnnualDeductibleAmt            138556 non-null  int64 \n","dtypes: int64(21), object(4)\n","memory usage: 26.4+ MB\n"]}],"source":["# Visualiza información general del DataFrame (tipos de datos, valores no nulos, etc.)\n","df_train_beneficiary.info()"]},{"cell_type":"markdown","metadata":{"id":"mn6BC-Z8d2Gy"},"source":["Columnas:\n","\n","BeneID, DOB, DOD, Gender, Race, RenalDiseaseIndicator, State, County, NoOfMonths_PartACov, NoOfMonths_PartBCov, ChronicCond_Alzheimer, ChronicCond_Heartfailure, ChronicCond_KidneyDisease, ChronicCond_Cancer, ChronicCond_ObstrPulmonary, ChronicCond_Depression, ChronicCond_Diabetes, ChronicCond_IschemicHeart, ChronicCond_Osteoporasis, ChronicCond_rheumatoidarthritis, ChronicCond_stroke, IPAnnualReimbursementAmt, IPAnnualDeductibleAmt, OPAnnualReimbursementAmt, OPAnnualDeductibleAmt"]},{"cell_type":"markdown","metadata":{"id":"aZMCjBB4KUSc"},"source":["+ 0\tBENE11001\t1943-01-01\tNaN\t1\t1\t0\t39\t230\t12\t12\t...\t1\t1\t1\t2\t1\t1\t36000\t3204\t60\t70\n","+ 1\tBENE11002\t1936-09-01\tNaN\t2\t1\t0\t39\t280\t12\t12\t...\t2\t2\t2\t2\t2\t2\t0\t0\t30\t50\n","+ 2\tBENE11003\t1936-08-01\tNaN\t1\t1\t0\t52\t590\t12\t12\t...\t2\t2\t1\t2\t2\t2\t0\t0\t90\t40\n","+ 3\tBENE11004\t1922-07-01\tNaN\t1\t1\t0\t39\t270\t12\t12\t...\t2\t1\t1\t1\t1\t2\t0\t0\t1810\t760\n","+ 4\tBENE11005\t1935-09-01\tNaN\t1\t1\t0\t24\t680\t12\t12\t...\t2\t1\t2\t2\t2\t2\t0\t0\t1790\t1200"]},{"cell_type":"markdown","metadata":{"id":"7HIi4dAALXOf"},"source":["# Train_Inpatientdata-1542865627584.csv.zip\n"]},{"cell_type":"code","execution_count":7,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":256},"executionInfo":{"elapsed":30,"status":"ok","timestamp":1732500247524,"user":{"displayName":"Elías Joaquín Yáñez Huerta","userId":"11326424779274297318"},"user_tz":360},"id":"Png4QUQUKhh4","outputId":"284f6638-4eab-41ee-affd-0f25aa14fe21"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["      BeneID   ClaimID ClaimStartDt  ClaimEndDt  Provider  \\\n","0  BENE11001  CLM46614   2009-04-12  2009-04-18  PRV55912   \n","1  BENE11001  CLM66048   2009-08-31  2009-09-02  PRV55907   \n","2  BENE11001  CLM68358   2009-09-17  2009-09-20  PRV56046   \n","3  BENE11011  CLM38412   2009-02-14  2009-02-22  PRV52405   \n","4  BENE11014  CLM63689   2009-08-13  2009-08-30  PRV56614   \n","\n","   InscClaimAmtReimbursed AttendingPhysician OperatingPhysician  \\\n","0                   26000          PHY390922                NaN   \n","1                    5000          PHY318495          PHY318495   \n","2                    5000          PHY372395                NaN   \n","3                    5000          PHY369659          PHY392961   \n","4                   10000          PHY379376          PHY398258   \n","\n","  OtherPhysician AdmissionDt  ... ClmDiagnosisCode_7  ClmDiagnosisCode_8  \\\n","0            NaN  2009-04-12  ...               2724               19889   \n","1            NaN  2009-08-31  ...                NaN                 NaN   \n","2      PHY324689  2009-09-17  ...                NaN                 NaN   \n","3      PHY349768  2009-02-14  ...              25062               40390   \n","4            NaN  2009-08-13  ...               5119               29620   \n","\n","  ClmDiagnosisCode_9 ClmDiagnosisCode_10 ClmProcedureCode_1  \\\n","0               5849                 NaN                NaN   \n","1                NaN                 NaN             7092.0   \n","2                NaN                 NaN                NaN   \n","3               4019                 NaN              331.0   \n","4              20300                 NaN             3893.0   \n","\n","  ClmProcedureCode_2 ClmProcedureCode_3 ClmProcedureCode_4 ClmProcedureCode_5  \\\n","0                NaN                NaN                NaN                NaN   \n","1                NaN                NaN                NaN                NaN   \n","2                NaN                NaN                NaN                NaN   \n","3                NaN                NaN                NaN                NaN   \n","4                NaN                NaN                NaN                NaN   \n","\n","  ClmProcedureCode_6  \n","0                NaN  \n","1                NaN  \n","2                NaN  \n","3                NaN  \n","4                NaN  \n","\n","[5 rows x 30 columns]"],"text/html":["\n","  <div id=\"df-d7ddc06b-f924-4229-a897-57fc8f55e7a5\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>BeneID</th>\n","      <th>ClaimID</th>\n","      <th>ClaimStartDt</th>\n","      <th>ClaimEndDt</th>\n","      <th>Provider</th>\n","      <th>InscClaimAmtReimbursed</th>\n","      <th>AttendingPhysician</th>\n","      <th>OperatingPhysician</th>\n","      <th>OtherPhysician</th>\n","      <th>AdmissionDt</th>\n","      <th>...</th>\n","      <th>ClmDiagnosisCode_7</th>\n","      <th>ClmDiagnosisCode_8</th>\n","      <th>ClmDiagnosisCode_9</th>\n","      <th>ClmDiagnosisCode_10</th>\n","      <th>ClmProcedureCode_1</th>\n","      <th>ClmProcedureCode_2</th>\n","      <th>ClmProcedureCode_3</th>\n","      <th>ClmProcedureCode_4</th>\n","      <th>ClmProcedureCode_5</th>\n","      <th>ClmProcedureCode_6</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>BENE11001</td>\n","      <td>CLM46614</td>\n","      <td>2009-04-12</td>\n","      <td>2009-04-18</td>\n","      <td>PRV55912</td>\n","      <td>26000</td>\n","      <td>PHY390922</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>2009-04-12</td>\n","      <td>...</td>\n","      <td>2724</td>\n","      <td>19889</td>\n","      <td>5849</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>BENE11001</td>\n","      <td>CLM66048</td>\n","      <td>2009-08-31</td>\n","      <td>2009-09-02</td>\n","      <td>PRV55907</td>\n","      <td>5000</td>\n","      <td>PHY318495</td>\n","      <td>PHY318495</td>\n","      <td>NaN</td>\n","      <td>2009-08-31</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>7092.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>BENE11001</td>\n","      <td>CLM68358</td>\n","      <td>2009-09-17</td>\n","      <td>2009-09-20</td>\n","      <td>PRV56046</td>\n","      <td>5000</td>\n","      <td>PHY372395</td>\n","      <td>NaN</td>\n","      <td>PHY324689</td>\n","      <td>2009-09-17</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>BENE11011</td>\n","      <td>CLM38412</td>\n","      <td>2009-02-14</td>\n","      <td>2009-02-22</td>\n","      <td>PRV52405</td>\n","      <td>5000</td>\n","      <td>PHY369659</td>\n","      <td>PHY392961</td>\n","      <td>PHY349768</td>\n","      <td>2009-02-14</td>\n","      <td>...</td>\n","      <td>25062</td>\n","      <td>40390</td>\n","      <td>4019</td>\n","      <td>NaN</td>\n","      <td>331.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>BENE11014</td>\n","      <td>CLM63689</td>\n","      <td>2009-08-13</td>\n","      <td>2009-08-30</td>\n","      <td>PRV56614</td>\n","      <td>10000</td>\n","      <td>PHY379376</td>\n","      <td>PHY398258</td>\n","      <td>NaN</td>\n","      <td>2009-08-13</td>\n","      <td>...</td>\n","      <td>5119</td>\n","      <td>29620</td>\n","      <td>20300</td>\n","      <td>NaN</td>\n","      <td>3893.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows × 30 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d7ddc06b-f924-4229-a897-57fc8f55e7a5')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-d7ddc06b-f924-4229-a897-57fc8f55e7a5 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-d7ddc06b-f924-4229-a897-57fc8f55e7a5');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-4b98c7a8-d1db-4d84-ab7e-15c6e7e28ccb\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-4b98c7a8-d1db-4d84-ab7e-15c6e7e28ccb')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-4b98c7a8-d1db-4d84-ab7e-15c6e7e28ccb button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe"}},"metadata":{},"execution_count":7}],"source":["# Accede al DataFrame 'Train_Inpatientdata-1542865627584.csv.zip'\n","df_train_inpatient = dataframes['Train_Inpatientdata-1542865627584.csv.zip']\n","\n","# Visualiza las primeras 5 filas\n","df_train_inpatient.head()\n","\n","# Visualiza información general del DataFrame (tipos de datos, valores no nulos, etc.)\n","#df_train.info()\n","\n","# Visualiza estadísticas descriptivas de las columnas numéricas\n","#df_train.describe()"]},{"cell_type":"code","execution_count":8,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":284,"status":"ok","timestamp":1732500247781,"user":{"displayName":"Elías Joaquín Yáñez Huerta","userId":"11326424779274297318"},"user_tz":360},"id":"RwCwUFmIcgBs","outputId":"b8bd4778-26d0-4f6b-b609-5f40335953b9"},"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 40474 entries, 0 to 40473\n","Data columns (total 30 columns):\n"," #   Column                  Non-Null Count  Dtype  \n","---  ------                  --------------  -----  \n"," 0   BeneID                  40474 non-null  object \n"," 1   ClaimID                 40474 non-null  object \n"," 2   ClaimStartDt            40474 non-null  object \n"," 3   ClaimEndDt              40474 non-null  object \n"," 4   Provider                40474 non-null  object \n"," 5   InscClaimAmtReimbursed  40474 non-null  int64  \n"," 6   AttendingPhysician      40362 non-null  object \n"," 7   OperatingPhysician      23830 non-null  object \n"," 8   OtherPhysician          4690 non-null   object \n"," 9   AdmissionDt             40474 non-null  object \n"," 10  ClmAdmitDiagnosisCode   40474 non-null  object \n"," 11  DeductibleAmtPaid       39575 non-null  float64\n"," 12  DischargeDt             40474 non-null  object \n"," 13  DiagnosisGroupCode      40474 non-null  object \n"," 14  ClmDiagnosisCode_1      40474 non-null  object \n"," 15  ClmDiagnosisCode_2      40248 non-null  object \n"," 16  ClmDiagnosisCode_3      39798 non-null  object \n"," 17  ClmDiagnosisCode_4      38940 non-null  object \n"," 18  ClmDiagnosisCode_5      37580 non-null  object \n"," 19  ClmDiagnosisCode_6      35636 non-null  object \n"," 20  ClmDiagnosisCode_7      33216 non-null  object \n"," 21  ClmDiagnosisCode_8      30532 non-null  object \n"," 22  ClmDiagnosisCode_9      26977 non-null  object \n"," 23  ClmDiagnosisCode_10     3927 non-null   object \n"," 24  ClmProcedureCode_1      23148 non-null  float64\n"," 25  ClmProcedureCode_2      5454 non-null   float64\n"," 26  ClmProcedureCode_3      965 non-null    float64\n"," 27  ClmProcedureCode_4      116 non-null    float64\n"," 28  ClmProcedureCode_5      9 non-null      float64\n"," 29  ClmProcedureCode_6      0 non-null      float64\n","dtypes: float64(7), int64(1), object(22)\n","memory usage: 9.3+ MB\n"]}],"source":["# Visualiza información general del DataFrame (tipos de datos, valores no nulos, etc.)\n","df_train_inpatient.info()"]},{"cell_type":"markdown","metadata":{"id":"tdtenLhFemGn"},"source":["Columnas:\n","\n","BeneID, ClaimID, ClaimStartDt, ClaimEndDt, Provider, InscClaimAmtReimbursed, AttendingPhysician, OperatingPhysician, OtherPhysician, AdmissionDt, ClmAdmitDiagnosisCode, DeductibleAmtPaid, DischargeDt, DiagnosisGroupCode, ClmDiagnosisCode_1, ClmDiagnosisCode_2, ClmDiagnosisCode_3, ClmDiagnosisCode_4, ClmDiagnosisCode_5, ClmDiagnosisCode_6, ClmDiagnosisCode_7, ClmDiagnosisCode_8, ClmDiagnosisCode_9, ClmDiagnosisCode_10, ClmProcedureCode_1, ClmProcedureCode_2, ClmProcedureCode_3, ClmProcedureCode_4, ClmProcedureCode_5, ClmProcedureCode_6"]},{"cell_type":"markdown","metadata":{"id":"xVy0jnBlLzhA"},"source":["+ 0\tBENE11001\tCLM46614\t2009-04-12\t2009-04-18\tPRV55912\t26000\tPHY390922\tNaN\tNaN\t2009-04-12\t...\t2724\t19889\t5849\tNaN\tNaN\tNaN\tNaN\tNaN\tNaN\tNaN\n","+ 1\tBENE11001\tCLM66048\t2009-08-31\t2009-09-02\tPRV55907\t5000\tPHY318495\tPHY318495\tNaN\t2009-08-31\t...\tNaN\tNaN\tNaN\tNaN\t7092.0\tNaN\tNaN\tNaN\tNaN\tNaN\n","+ 2\tBENE11001\tCLM68358\t2009-09-17\t2009-09-20\tPRV56046\t5000\tPHY372395\tNaN\tPHY324689\t2009-09-17\t...\tNaN\tNaN\tNaN\tNaN\tNaN\tNaN\tNaN\tNaN\tNaN\tNaN\n","+ 3\tBENE11011\tCLM38412\t2009-02-14\t2009-02-22\tPRV52405\t5000\tPHY369659\tPHY392961\tPHY349768\t2009-02-14\t...\t25062\t40390\t4019\tNaN\t331.0\tNaN\tNaN\tNaN\tNaN\tNaN\n","+ 4\tBENE11014\tCLM63689\t2009-08-13\t2009-08-30\tPRV56614\t10000\tPHY379376\tPHY398258\tNaN\t2009-08-13\t...\t5119\t29620\t20300\tNaN\t3893.0\tNaN\tNaN\tNaN\tNaN\tNaN"]},{"cell_type":"markdown","metadata":{"id":"CW60T-lWMJar"},"source":["# Train_Outpatientdata-1542865627584.csv.zip"]},{"cell_type":"code","execution_count":9,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":256},"executionInfo":{"elapsed":12,"status":"ok","timestamp":1732500247782,"user":{"displayName":"Elías Joaquín Yáñez Huerta","userId":"11326424779274297318"},"user_tz":360},"id":"qSwobXW5MMmF","outputId":"ca417fb2-2993-440b-cd8e-0e2c6cafc092"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["      BeneID    ClaimID ClaimStartDt  ClaimEndDt  Provider  \\\n","0  BENE11002  CLM624349   2009-10-11  2009-10-11  PRV56011   \n","1  BENE11003  CLM189947   2009-02-12  2009-02-12  PRV57610   \n","2  BENE11003  CLM438021   2009-06-27  2009-06-27  PRV57595   \n","3  BENE11004  CLM121801   2009-01-06  2009-01-06  PRV56011   \n","4  BENE11004  CLM150998   2009-01-22  2009-01-22  PRV56011   \n","\n","   InscClaimAmtReimbursed AttendingPhysician OperatingPhysician  \\\n","0                      30          PHY326117                NaN   \n","1                      80          PHY362868                NaN   \n","2                      10          PHY328821                NaN   \n","3                      40          PHY334319                NaN   \n","4                     200          PHY403831                NaN   \n","\n","  OtherPhysician ClmDiagnosisCode_1  ... ClmDiagnosisCode_9  \\\n","0            NaN              78943  ...                NaN   \n","1            NaN               6115  ...                NaN   \n","2            NaN               2723  ...                NaN   \n","3            NaN              71988  ...                NaN   \n","4            NaN              82382  ...                NaN   \n","\n","  ClmDiagnosisCode_10 ClmProcedureCode_1 ClmProcedureCode_2  \\\n","0                 NaN                NaN                NaN   \n","1                 NaN                NaN                NaN   \n","2                 NaN                NaN                NaN   \n","3                 NaN                NaN                NaN   \n","4                 NaN                NaN                NaN   \n","\n","  ClmProcedureCode_3 ClmProcedureCode_4 ClmProcedureCode_5 ClmProcedureCode_6  \\\n","0                NaN                NaN                NaN                NaN   \n","1                NaN                NaN                NaN                NaN   \n","2                NaN                NaN                NaN                NaN   \n","3                NaN                NaN                NaN                NaN   \n","4                NaN                NaN                NaN                NaN   \n","\n","  DeductibleAmtPaid  ClmAdmitDiagnosisCode  \n","0                 0                  56409  \n","1                 0                  79380  \n","2                 0                    NaN  \n","3                 0                    NaN  \n","4                 0                  71947  \n","\n","[5 rows x 27 columns]"],"text/html":["\n","  <div id=\"df-72b1fdd7-8191-4dfe-b9c8-907d0a05a6fb\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>BeneID</th>\n","      <th>ClaimID</th>\n","      <th>ClaimStartDt</th>\n","      <th>ClaimEndDt</th>\n","      <th>Provider</th>\n","      <th>InscClaimAmtReimbursed</th>\n","      <th>AttendingPhysician</th>\n","      <th>OperatingPhysician</th>\n","      <th>OtherPhysician</th>\n","      <th>ClmDiagnosisCode_1</th>\n","      <th>...</th>\n","      <th>ClmDiagnosisCode_9</th>\n","      <th>ClmDiagnosisCode_10</th>\n","      <th>ClmProcedureCode_1</th>\n","      <th>ClmProcedureCode_2</th>\n","      <th>ClmProcedureCode_3</th>\n","      <th>ClmProcedureCode_4</th>\n","      <th>ClmProcedureCode_5</th>\n","      <th>ClmProcedureCode_6</th>\n","      <th>DeductibleAmtPaid</th>\n","      <th>ClmAdmitDiagnosisCode</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>BENE11002</td>\n","      <td>CLM624349</td>\n","      <td>2009-10-11</td>\n","      <td>2009-10-11</td>\n","      <td>PRV56011</td>\n","      <td>30</td>\n","      <td>PHY326117</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>78943</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>56409</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>BENE11003</td>\n","      <td>CLM189947</td>\n","      <td>2009-02-12</td>\n","      <td>2009-02-12</td>\n","      <td>PRV57610</td>\n","      <td>80</td>\n","      <td>PHY362868</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>6115</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>79380</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>BENE11003</td>\n","      <td>CLM438021</td>\n","      <td>2009-06-27</td>\n","      <td>2009-06-27</td>\n","      <td>PRV57595</td>\n","      <td>10</td>\n","      <td>PHY328821</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>2723</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>BENE11004</td>\n","      <td>CLM121801</td>\n","      <td>2009-01-06</td>\n","      <td>2009-01-06</td>\n","      <td>PRV56011</td>\n","      <td>40</td>\n","      <td>PHY334319</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>71988</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>BENE11004</td>\n","      <td>CLM150998</td>\n","      <td>2009-01-22</td>\n","      <td>2009-01-22</td>\n","      <td>PRV56011</td>\n","      <td>200</td>\n","      <td>PHY403831</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>82382</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>71947</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows × 27 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-72b1fdd7-8191-4dfe-b9c8-907d0a05a6fb')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-72b1fdd7-8191-4dfe-b9c8-907d0a05a6fb button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-72b1fdd7-8191-4dfe-b9c8-907d0a05a6fb');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-3202ecbd-48d1-4914-9ea2-783de23cb301\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-3202ecbd-48d1-4914-9ea2-783de23cb301')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-3202ecbd-48d1-4914-9ea2-783de23cb301 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe"}},"metadata":{},"execution_count":9}],"source":["# Accede al DataFrame 'Train_Outpatientdata-1542865627584.csv.zip'\n","df_train_outpatient = dataframes['Train_Outpatientdata-1542865627584.csv.zip']\n","\n","# Visualiza las primeras 5 filas\n","df_train_outpatient.head()\n","\n","# Visualiza información general del DataFrame (tipos de datos, valores no nulos, etc.)\n","#df_train.info()\n","\n","# Visualiza estadísticas descriptivas de las columnas numéricas\n","#df_train.describe()"]},{"cell_type":"code","execution_count":10,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":921,"status":"ok","timestamp":1732500248694,"user":{"displayName":"Elías Joaquín Yáñez Huerta","userId":"11326424779274297318"},"user_tz":360},"id":"iKF2qZ-yclYw","outputId":"c4fccfe7-db38-4258-9ff4-95dfc43f702b"},"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 517737 entries, 0 to 517736\n","Data columns (total 27 columns):\n"," #   Column                  Non-Null Count   Dtype  \n","---  ------                  --------------   -----  \n"," 0   BeneID                  517737 non-null  object \n"," 1   ClaimID                 517737 non-null  object \n"," 2   ClaimStartDt            517737 non-null  object \n"," 3   ClaimEndDt              517737 non-null  object \n"," 4   Provider                517737 non-null  object \n"," 5   InscClaimAmtReimbursed  517737 non-null  int64  \n"," 6   AttendingPhysician      516341 non-null  object \n"," 7   OperatingPhysician      90617 non-null   object \n"," 8   OtherPhysician          195046 non-null  object \n"," 9   ClmDiagnosisCode_1      507284 non-null  object \n"," 10  ClmDiagnosisCode_2      322357 non-null  object \n"," 11  ClmDiagnosisCode_3      203257 non-null  object \n"," 12  ClmDiagnosisCode_4      125596 non-null  object \n"," 13  ClmDiagnosisCode_5      74344 non-null   object \n"," 14  ClmDiagnosisCode_6      48756 non-null   object \n"," 15  ClmDiagnosisCode_7      32961 non-null   object \n"," 16  ClmDiagnosisCode_8      22912 non-null   object \n"," 17  ClmDiagnosisCode_9      14838 non-null   object \n"," 18  ClmDiagnosisCode_10     1083 non-null    object \n"," 19  ClmProcedureCode_1      162 non-null     float64\n"," 20  ClmProcedureCode_2      36 non-null      float64\n"," 21  ClmProcedureCode_3      4 non-null       float64\n"," 22  ClmProcedureCode_4      2 non-null       float64\n"," 23  ClmProcedureCode_5      0 non-null       float64\n"," 24  ClmProcedureCode_6      0 non-null       float64\n"," 25  DeductibleAmtPaid       517737 non-null  int64  \n"," 26  ClmAdmitDiagnosisCode   105425 non-null  object \n","dtypes: float64(6), int64(2), object(19)\n","memory usage: 106.7+ MB\n"]}],"source":["# Visualiza información general del DataFrame (tipos de datos, valores no nulos, etc.)\n","df_train_outpatient.info()"]},{"cell_type":"markdown","metadata":{"id":"yXk_thvFfuXi"},"source":["Columnas:\n","\n","BeneID, ClaimID, ClaimStartDt, ClaimEndDt, Provider, InscClaimAmtReimbursed, AttendingPhysician, OperatingPhysician, OtherPhysician, ClmDiagnosisCode_1, ClmDiagnosisCode_2, ClmDiagnosisCode_3, ClmDiagnosisCode_4, ClmDiagnosisCode_5, ClmDiagnosisCode_6, ClmDiagnosisCode_7, ClmDiagnosisCode_8, ClmDiagnosisCode_9, ClmDiagnosisCode_10, ClmProcedureCode_1, ClmProcedureCode_2, ClmProcedureCode_3, ClmProcedureCode_4, ClmProcedureCode_5, ClmProcedureCode_6, DeductibleAmtPaid, ClmAdmitDiagnosisCode"]},{"cell_type":"markdown","metadata":{"id":"szKodyxLNBHF"},"source":["+ 0\tBENE11002\tCLM624349\t2009-10-11\t2009-10-11\tPRV56011\t30\tPHY326117\tNaN\tNaN\t78943\t...\tNaN\tNaN\tNaN\tNaN\tNaN\tNaN\tNaN\tNaN\t0\t56409\n","+ 1\tBENE11003\tCLM189947\t2009-02-12\t2009-02-12\tPRV57610\t80\tPHY362868\tNaN\tNaN\t6115\t...\tNaN\tNaN\tNaN\tNaN\tNaN\tNaN\tNaN\tNaN\t0\t79380\n","+ 2\tBENE11003\tCLM438021\t2009-06-27\t2009-06-27\tPRV57595\t10\tPHY328821\tNaN\tNaN\t2723\t...\tNaN\tNaN\tNaN\tNaN\tNaN\tNaN\tNaN\tNaN\t0\tNaN\n","+ 3\tBENE11004\tCLM121801\t2009-01-06\t2009-01-06\tPRV56011\t40\tPHY334319\tNaN\tNaN\t71988\t...\tNaN\tNaN\tNaN\tNaN\tNaN\tNaN\tNaN\tNaN\t0\tNaN\n","+ 4\tBENE11004\tCLM150998\t2009-01-22\t2009-01-22\tPRV56011\t200\tPHY403831\tNaN\tNaN\t82382\t...\tNaN\tNaN\tNaN\tNaN\tNaN\tNaN\tNaN\tNaN\t0\t71947"]},{"cell_type":"markdown","metadata":{"id":"6tTmZDgWXn9M"},"source":["establecer un dataset, \"como va  aquedar\" a nivel provedor. Estadisticas,\n","\n","Primer modelo de machine learning, accuracy. Random forest, XGboost. u otro para comparar\n","\n","analisis exploratorio\n","\n","Nivel Provedor\n","\n","despues reglas manuales"]},{"cell_type":"markdown","metadata":{"id":"A0YedYyziSNp"},"source":["Del DataFrame df_train_target:\n","\n","Provider: Esta es la clave principal y debe estar en el dataset final.\n","PotentialFraud: Esta es la variable objetivo que queremos predecir.\n","\n","Del DataFrame df_train_beneficiary:\n","\n","BeneID: Para vincular con otros DataFrames (pero posiblemente luego se elimine del dataset final).\n","Variables demográficas: Edad (calculada a partir de DOB y DOD), Género, Raza, Estado, Condado (podrían influir en patrones de fraude).\n","Indicadores de enfermedades: RenalDiseaseIndicator, ChronicCond_* (la prevalencia de ciertas enfermedades podría estar relacionada con el fraude).\n","Reembolsos y deducibles: IPAnnualReimbursementAmt, IPAnnualDeductibleAmt, OPAnnualReimbursementAmt, OPAnnualDeductibleAmt (montos altos podrían ser sospechosos).\n","\n","Del DataFrame df_train_inpatient:\n","\n","BeneID/ClaimID/Provider: Para vincular y agrupar información.\n","InscClaimAmtReimbursed: Monto reembolsado por la aseguradora (posible indicador de fraude).\n","DeductibleAmtPaid: Monto del deducible pagado (podría estar relacionado con el fraude).\n","Códigos de diagnóstico y procedimientos: ClmAdmitDiagnosisCode, DiagnosisGroupCode, ClmDiagnosisCode_*, ClmProcedureCode_* (ciertos códigos podrían ser más propensos al fraude).\n","Fechas: ClaimStartDt, ClaimEndDt, AdmissionDt, DischargeDt (para calcular la duración de las estancias, frecuencia de reclamos, etc.).\n","\n","Del DataFrame df_train_outpatient:\n","\n","Similar al DataFrame df_train_inpatient, selecciona columnas que representen montos reembolsados, deducibles, códigos de diagnóstico y procedimientos, y fechas."]},{"cell_type":"code","execution_count":11,"metadata":{"executionInfo":{"elapsed":9,"status":"ok","timestamp":1732500248694,"user":{"displayName":"Elías Joaquín Yáñez Huerta","userId":"11326424779274297318"},"user_tz":360},"id":"zAgXuhlEj_ht"},"outputs":[],"source":["# DataFrames auxiliares con las columnas especificadas\n","df_target = df_train_target[['Provider', 'PotentialFraud']]\n","df_beneficiary = df_train_beneficiary[['BeneID', 'DOB', 'DOD', 'Gender', 'Race', 'RenalDiseaseIndicator', 'State', 'County', 'NoOfMonths_PartACov', 'NoOfMonths_PartBCov', 'ChronicCond_Alzheimer', 'ChronicCond_Heartfailure', 'ChronicCond_KidneyDisease', 'ChronicCond_Cancer', 'ChronicCond_ObstrPulmonary', 'ChronicCond_Depression', 'ChronicCond_Diabetes', 'ChronicCond_IschemicHeart', 'ChronicCond_Osteoporasis', 'ChronicCond_rheumatoidarthritis', 'ChronicCond_stroke', 'IPAnnualReimbursementAmt', 'IPAnnualDeductibleAmt', 'OPAnnualReimbursementAmt', 'OPAnnualDeductibleAmt']]\n","df_inpatient = df_train_inpatient[['BeneID', 'ClaimID', 'Provider', 'InscClaimAmtReimbursed', 'DeductibleAmtPaid', 'ClmAdmitDiagnosisCode', 'DiagnosisGroupCode', 'ClaimStartDt', 'ClaimEndDt', 'AdmissionDt', 'DischargeDt']]\n","df_outpatient = df_train_outpatient[['BeneID', 'ClaimID', 'Provider', 'InscClaimAmtReimbursed', 'DeductibleAmtPaid', 'ClaimStartDt', 'ClaimEndDt']]"]},{"cell_type":"code","execution_count":12,"metadata":{"executionInfo":{"elapsed":9,"status":"ok","timestamp":1732500248695,"user":{"displayName":"Elías Joaquín Yáñez Huerta","userId":"11326424779274297318"},"user_tz":360},"id":"l92CIKA_kDk-"},"outputs":[],"source":["# Combinar inpatient y outpatient\n","df_claims = pd.concat([df_inpatient, df_outpatient])"]},{"cell_type":"code","execution_count":13,"metadata":{"executionInfo":{"elapsed":1142,"status":"ok","timestamp":1732500249829,"user":{"displayName":"Elías Joaquín Yáñez Huerta","userId":"11326424779274297318"},"user_tz":360},"id":"bgUf0iz1kFjt"},"outputs":[],"source":["# Combinar con información del beneficiario y el target\n","df_final = pd.merge(df_claims, df_target, on='Provider', how='left')\n","df_final = pd.merge(df_final, df_beneficiary, on='BeneID', how='left')"]},{"cell_type":"code","execution_count":14,"metadata":{"executionInfo":{"elapsed":14,"status":"ok","timestamp":1732500249831,"user":{"displayName":"Elías Joaquín Yáñez Huerta","userId":"11326424779274297318"},"user_tz":360},"id":"LUk_XIIpkH1x"},"outputs":[],"source":["# Eliminar la columna BeneID\n","df_final = df_final.drop('BeneID', axis=1)"]},{"cell_type":"code","execution_count":15,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":256},"executionInfo":{"elapsed":482,"status":"ok","timestamp":1732500250299,"user":{"displayName":"Elías Joaquín Yáñez Huerta","userId":"11326424779274297318"},"user_tz":360},"id":"ORLbOhWFlWMR","outputId":"2f8ed4de-21d6-47b1-bc24-82dcfac59ffd"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["    ClaimID  Provider  InscClaimAmtReimbursed  DeductibleAmtPaid  \\\n","0  CLM46614  PRV55912                   26000             1068.0   \n","1  CLM66048  PRV55907                    5000             1068.0   \n","2  CLM68358  PRV56046                    5000             1068.0   \n","3  CLM38412  PRV52405                    5000             1068.0   \n","4  CLM63689  PRV56614                   10000             1068.0   \n","\n","  ClmAdmitDiagnosisCode DiagnosisGroupCode ClaimStartDt  ClaimEndDt  \\\n","0                  7866                201   2009-04-12  2009-04-18   \n","1                  6186                750   2009-08-31  2009-09-02   \n","2                 29590                883   2009-09-17  2009-09-20   \n","3                   431                067   2009-02-14  2009-02-22   \n","4                 78321                975   2009-08-13  2009-08-30   \n","\n","  AdmissionDt DischargeDt  ... ChronicCond_Depression ChronicCond_Diabetes  \\\n","0  2009-04-12  2009-04-18  ...                      1                    1   \n","1  2009-08-31  2009-09-02  ...                      1                    1   \n","2  2009-09-17  2009-09-20  ...                      1                    1   \n","3  2009-02-14  2009-02-22  ...                      1                    1   \n","4  2009-08-13  2009-08-30  ...                      1                    2   \n","\n","  ChronicCond_IschemicHeart  ChronicCond_Osteoporasis  \\\n","0                         1                         2   \n","1                         1                         2   \n","2                         1                         2   \n","3                         2                         2   \n","4                         1                         2   \n","\n","   ChronicCond_rheumatoidarthritis ChronicCond_stroke  \\\n","0                                1                  1   \n","1                                1                  1   \n","2                                1                  1   \n","3                                1                  1   \n","4                                2                  2   \n","\n","   IPAnnualReimbursementAmt  IPAnnualDeductibleAmt  OPAnnualReimbursementAmt  \\\n","0                     36000                   3204                        60   \n","1                     36000                   3204                        60   \n","2                     36000                   3204                        60   \n","3                      5000                   1068                       250   \n","4                     21260                   2136                       120   \n","\n","   OPAnnualDeductibleAmt  \n","0                     70  \n","1                     70  \n","2                     70  \n","3                    320  \n","4                    100  \n","\n","[5 rows x 35 columns]"],"text/html":["\n","  <div id=\"df-ea623410-1911-4c96-9390-cdc13e087daa\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>ClaimID</th>\n","      <th>Provider</th>\n","      <th>InscClaimAmtReimbursed</th>\n","      <th>DeductibleAmtPaid</th>\n","      <th>ClmAdmitDiagnosisCode</th>\n","      <th>DiagnosisGroupCode</th>\n","      <th>ClaimStartDt</th>\n","      <th>ClaimEndDt</th>\n","      <th>AdmissionDt</th>\n","      <th>DischargeDt</th>\n","      <th>...</th>\n","      <th>ChronicCond_Depression</th>\n","      <th>ChronicCond_Diabetes</th>\n","      <th>ChronicCond_IschemicHeart</th>\n","      <th>ChronicCond_Osteoporasis</th>\n","      <th>ChronicCond_rheumatoidarthritis</th>\n","      <th>ChronicCond_stroke</th>\n","      <th>IPAnnualReimbursementAmt</th>\n","      <th>IPAnnualDeductibleAmt</th>\n","      <th>OPAnnualReimbursementAmt</th>\n","      <th>OPAnnualDeductibleAmt</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>CLM46614</td>\n","      <td>PRV55912</td>\n","      <td>26000</td>\n","      <td>1068.0</td>\n","      <td>7866</td>\n","      <td>201</td>\n","      <td>2009-04-12</td>\n","      <td>2009-04-18</td>\n","      <td>2009-04-12</td>\n","      <td>2009-04-18</td>\n","      <td>...</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>36000</td>\n","      <td>3204</td>\n","      <td>60</td>\n","      <td>70</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>CLM66048</td>\n","      <td>PRV55907</td>\n","      <td>5000</td>\n","      <td>1068.0</td>\n","      <td>6186</td>\n","      <td>750</td>\n","      <td>2009-08-31</td>\n","      <td>2009-09-02</td>\n","      <td>2009-08-31</td>\n","      <td>2009-09-02</td>\n","      <td>...</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>36000</td>\n","      <td>3204</td>\n","      <td>60</td>\n","      <td>70</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>CLM68358</td>\n","      <td>PRV56046</td>\n","      <td>5000</td>\n","      <td>1068.0</td>\n","      <td>29590</td>\n","      <td>883</td>\n","      <td>2009-09-17</td>\n","      <td>2009-09-20</td>\n","      <td>2009-09-17</td>\n","      <td>2009-09-20</td>\n","      <td>...</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>36000</td>\n","      <td>3204</td>\n","      <td>60</td>\n","      <td>70</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>CLM38412</td>\n","      <td>PRV52405</td>\n","      <td>5000</td>\n","      <td>1068.0</td>\n","      <td>431</td>\n","      <td>067</td>\n","      <td>2009-02-14</td>\n","      <td>2009-02-22</td>\n","      <td>2009-02-14</td>\n","      <td>2009-02-22</td>\n","      <td>...</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>5000</td>\n","      <td>1068</td>\n","      <td>250</td>\n","      <td>320</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>CLM63689</td>\n","      <td>PRV56614</td>\n","      <td>10000</td>\n","      <td>1068.0</td>\n","      <td>78321</td>\n","      <td>975</td>\n","      <td>2009-08-13</td>\n","      <td>2009-08-30</td>\n","      <td>2009-08-13</td>\n","      <td>2009-08-30</td>\n","      <td>...</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>21260</td>\n","      <td>2136</td>\n","      <td>120</td>\n","      <td>100</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows × 35 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ea623410-1911-4c96-9390-cdc13e087daa')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-ea623410-1911-4c96-9390-cdc13e087daa button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-ea623410-1911-4c96-9390-cdc13e087daa');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-24711fd8-f238-42e7-9308-8a94cc3c4eb9\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-24711fd8-f238-42e7-9308-8a94cc3c4eb9')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-24711fd8-f238-42e7-9308-8a94cc3c4eb9 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df_final"}},"metadata":{},"execution_count":15}],"source":["df_final.head()"]},{"cell_type":"code","execution_count":16,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":21,"status":"ok","timestamp":1732500250985,"user":{"displayName":"Elías Joaquín Yáñez Huerta","userId":"11326424779274297318"},"user_tz":360},"id":"TYLRKXyXlkZh","outputId":"60a93322-ca98-4a1d-97ce-5e0cc9839ca0"},"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 558211 entries, 0 to 558210\n","Data columns (total 35 columns):\n"," #   Column                           Non-Null Count   Dtype  \n","---  ------                           --------------   -----  \n"," 0   ClaimID                          558211 non-null  object \n"," 1   Provider                         558211 non-null  object \n"," 2   InscClaimAmtReimbursed           558211 non-null  int64  \n"," 3   DeductibleAmtPaid                557312 non-null  float64\n"," 4   ClmAdmitDiagnosisCode            40474 non-null   object \n"," 5   DiagnosisGroupCode               40474 non-null   object \n"," 6   ClaimStartDt                     558211 non-null  object \n"," 7   ClaimEndDt                       558211 non-null  object \n"," 8   AdmissionDt                      40474 non-null   object \n"," 9   DischargeDt                      40474 non-null   object \n"," 10  PotentialFraud                   558211 non-null  object \n"," 11  DOB                              558211 non-null  object \n"," 12  DOD                              4131 non-null    object \n"," 13  Gender                           558211 non-null  int64  \n"," 14  Race                             558211 non-null  int64  \n"," 15  RenalDiseaseIndicator            558211 non-null  object \n"," 16  State                            558211 non-null  int64  \n"," 17  County                           558211 non-null  int64  \n"," 18  NoOfMonths_PartACov              558211 non-null  int64  \n"," 19  NoOfMonths_PartBCov              558211 non-null  int64  \n"," 20  ChronicCond_Alzheimer            558211 non-null  int64  \n"," 21  ChronicCond_Heartfailure         558211 non-null  int64  \n"," 22  ChronicCond_KidneyDisease        558211 non-null  int64  \n"," 23  ChronicCond_Cancer               558211 non-null  int64  \n"," 24  ChronicCond_ObstrPulmonary       558211 non-null  int64  \n"," 25  ChronicCond_Depression           558211 non-null  int64  \n"," 26  ChronicCond_Diabetes             558211 non-null  int64  \n"," 27  ChronicCond_IschemicHeart        558211 non-null  int64  \n"," 28  ChronicCond_Osteoporasis         558211 non-null  int64  \n"," 29  ChronicCond_rheumatoidarthritis  558211 non-null  int64  \n"," 30  ChronicCond_stroke               558211 non-null  int64  \n"," 31  IPAnnualReimbursementAmt         558211 non-null  int64  \n"," 32  IPAnnualDeductibleAmt            558211 non-null  int64  \n"," 33  OPAnnualReimbursementAmt         558211 non-null  int64  \n"," 34  OPAnnualDeductibleAmt            558211 non-null  int64  \n","dtypes: float64(1), int64(22), object(12)\n","memory usage: 149.1+ MB\n"]}],"source":["df_final.info()"]},{"cell_type":"markdown","metadata":{"id":"T7nnOQv4Go-_"},"source":["# Tests"]},{"cell_type":"code","execution_count":17,"metadata":{"executionInfo":{"elapsed":19,"status":"ok","timestamp":1732500250986,"user":{"displayName":"Elías Joaquín Yáñez Huerta","userId":"11326424779274297318"},"user_tz":360},"id":"ghUPF62LGuFA"},"outputs":[],"source":["# Cargar datos de prueba\n","df_test_target = dataframes['Test-1542969243754.csv']\n","df_test_beneficiary = dataframes['Test_Beneficiarydata-1542969243754.csv.zip']\n","df_test_inpatient = dataframes['Test_Inpatientdata-1542969243754.csv.zip']\n","df_test_outpatient = dataframes['Test_Outpatientdata-1542969243754.csv.zip']"]},{"cell_type":"code","execution_count":18,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"executionInfo":{"elapsed":19,"status":"ok","timestamp":1732500250987,"user":{"displayName":"Elías Joaquín Yáñez Huerta","userId":"11326424779274297318"},"user_tz":360},"id":"kufwzG2nIPKA","outputId":"54993842-24c1-4e3f-f6c8-f31dd5832a49"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Provider\n","0  PRV51002\n","1  PRV51006\n","2  PRV51009\n","3  PRV51010\n","4  PRV51018"],"text/html":["\n","  <div id=\"df-0b9be89d-6313-43ef-9b67-5804b5c03ef1\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Provider</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>PRV51002</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>PRV51006</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>PRV51009</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>PRV51010</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>PRV51018</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0b9be89d-6313-43ef-9b67-5804b5c03ef1')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-0b9be89d-6313-43ef-9b67-5804b5c03ef1 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-0b9be89d-6313-43ef-9b67-5804b5c03ef1');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-0262ca94-130a-4932-bc0f-2d09cec5926e\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-0262ca94-130a-4932-bc0f-2d09cec5926e')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-0262ca94-130a-4932-bc0f-2d09cec5926e button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df_test_target","summary":"{\n  \"name\": \"df_test_target\",\n  \"rows\": 1353,\n  \"fields\": [\n    {\n      \"column\": \"Provider\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1353,\n        \"samples\": [\n          \"PRV51208\",\n          \"PRV54243\",\n          \"PRV56155\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":18}],"source":["df_test_target.head()"]},{"cell_type":"code","execution_count":19,"metadata":{"executionInfo":{"elapsed":16,"status":"ok","timestamp":1732500250987,"user":{"displayName":"Elías Joaquín Yáñez Huerta","userId":"11326424779274297318"},"user_tz":360},"id":"T8TotBp5HDEb"},"outputs":[],"source":["# DataFrames auxiliares con las columnas especificadas\n","df_target_test = df_test_target[['Provider']]\n","df_beneficiary_test = df_test_beneficiary[['BeneID', 'DOB', 'DOD', 'Gender', 'Race', 'RenalDiseaseIndicator', 'State', 'County', 'NoOfMonths_PartACov', 'NoOfMonths_PartBCov', 'ChronicCond_Alzheimer', 'ChronicCond_Heartfailure', 'ChronicCond_KidneyDisease', 'ChronicCond_Cancer', 'ChronicCond_ObstrPulmonary', 'ChronicCond_Depression', 'ChronicCond_Diabetes', 'ChronicCond_IschemicHeart', 'ChronicCond_Osteoporasis', 'ChronicCond_rheumatoidarthritis', 'ChronicCond_stroke', 'IPAnnualReimbursementAmt', 'IPAnnualDeductibleAmt', 'OPAnnualReimbursementAmt', 'OPAnnualDeductibleAmt']]\n","df_inpatient_test = df_test_inpatient[['BeneID', 'ClaimID', 'Provider', 'InscClaimAmtReimbursed', 'DeductibleAmtPaid', 'ClmAdmitDiagnosisCode', 'DiagnosisGroupCode', 'ClaimStartDt', 'ClaimEndDt', 'AdmissionDt', 'DischargeDt']]\n","df_outpatient_test = df_test_outpatient[['BeneID', 'ClaimID', 'Provider', 'InscClaimAmtReimbursed', 'DeductibleAmtPaid', 'ClaimStartDt', 'ClaimEndDt']]"]},{"cell_type":"code","execution_count":20,"metadata":{"executionInfo":{"elapsed":14,"status":"ok","timestamp":1732500250987,"user":{"displayName":"Elías Joaquín Yáñez Huerta","userId":"11326424779274297318"},"user_tz":360},"id":"vDbugliZHV6w"},"outputs":[],"source":["# Combinar inpatient y outpatient\n","df_claims_test = pd.concat([df_inpatient_test, df_outpatient_test])"]},{"cell_type":"code","execution_count":21,"metadata":{"executionInfo":{"elapsed":434,"status":"ok","timestamp":1732500251408,"user":{"displayName":"Elías Joaquín Yáñez Huerta","userId":"11326424779274297318"},"user_tz":360},"id":"Z1J9svH6Hk7u"},"outputs":[],"source":["# Combinar con información del beneficiario y el target\n","df_final_test = pd.merge(df_claims_test, df_target_test, on='Provider', how='left')\n","df_final_test = pd.merge(df_final_test, df_beneficiary_test, on='BeneID', how='left')"]},{"cell_type":"code","execution_count":22,"metadata":{"executionInfo":{"elapsed":11,"status":"ok","timestamp":1732500251408,"user":{"displayName":"Elías Joaquín Yáñez Huerta","userId":"11326424779274297318"},"user_tz":360},"id":"mAHjJD6IH7D8"},"outputs":[],"source":["# Eliminar la columna BeneID\n","df_final_test = df_final_test.drop('BeneID', axis=1)"]},{"cell_type":"code","execution_count":23,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":256},"executionInfo":{"elapsed":10,"status":"ok","timestamp":1732500251408,"user":{"displayName":"Elías Joaquín Yáñez Huerta","userId":"11326424779274297318"},"user_tz":360},"id":"vhkpoJF1I9HV","outputId":"28af57f5-5c76-4997-df43-39d386fe65a6"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["    ClaimID  Provider  InscClaimAmtReimbursed  DeductibleAmtPaid  \\\n","0  CLM67387  PRV57070                    9000             1068.0   \n","1  CLM31237  PRV54750                   14000             1068.0   \n","2  CLM78930  PRV53758                    2000             1068.0   \n","3  CLM56810  PRV55825                   16000             1068.0   \n","4  CLM34625  PRV52338                   19000             1068.0   \n","\n","  ClmAdmitDiagnosisCode DiagnosisGroupCode ClaimStartDt  ClaimEndDt  \\\n","0                  5789                332   2009-09-09  2009-09-16   \n","1                  5939                661   2008-12-25  2009-01-08   \n","2                  4019                241   2009-12-09  2009-12-13   \n","3                  8208                564   2009-06-23  2009-07-06   \n","4                  4279                880   2009-01-20  2009-01-31   \n","\n","  AdmissionDt DischargeDt  ... ChronicCond_Depression ChronicCond_Diabetes  \\\n","0  2009-09-09  2009-09-16  ...                      1                    2   \n","1  2008-12-25  2009-01-08  ...                      2                    1   \n","2  2009-12-09  2009-12-13  ...                      2                    2   \n","3  2009-06-23  2009-07-06  ...                      2                    2   \n","4  2009-01-20  2009-01-31  ...                      1                    1   \n","\n","   ChronicCond_IschemicHeart  ChronicCond_Osteoporasis  \\\n","0                          1                         2   \n","1                          1                         2   \n","2                          1                         2   \n","3                          1                         1   \n","4                          1                         1   \n","\n","  ChronicCond_rheumatoidarthritis  ChronicCond_stroke  \\\n","0                               2                   2   \n","1                               1                   1   \n","2                               2                   2   \n","3                               2                   2   \n","4                               2                   2   \n","\n","   IPAnnualReimbursementAmt  IPAnnualDeductibleAmt  OPAnnualReimbursementAmt  \\\n","0                     21260                   2136                       120   \n","1                     22000                   2136                      1400   \n","2                      2000                   1068                         0   \n","3                     23650                   2136                        40   \n","4                     19000                   1068                      1670   \n","\n","   OPAnnualDeductibleAmt  \n","0                    100  \n","1                    840  \n","2                      0  \n","3                      0  \n","4                    520  \n","\n","[5 rows x 34 columns]"],"text/html":["\n","  <div id=\"df-e6489322-4754-49f7-8113-73af042afda2\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>ClaimID</th>\n","      <th>Provider</th>\n","      <th>InscClaimAmtReimbursed</th>\n","      <th>DeductibleAmtPaid</th>\n","      <th>ClmAdmitDiagnosisCode</th>\n","      <th>DiagnosisGroupCode</th>\n","      <th>ClaimStartDt</th>\n","      <th>ClaimEndDt</th>\n","      <th>AdmissionDt</th>\n","      <th>DischargeDt</th>\n","      <th>...</th>\n","      <th>ChronicCond_Depression</th>\n","      <th>ChronicCond_Diabetes</th>\n","      <th>ChronicCond_IschemicHeart</th>\n","      <th>ChronicCond_Osteoporasis</th>\n","      <th>ChronicCond_rheumatoidarthritis</th>\n","      <th>ChronicCond_stroke</th>\n","      <th>IPAnnualReimbursementAmt</th>\n","      <th>IPAnnualDeductibleAmt</th>\n","      <th>OPAnnualReimbursementAmt</th>\n","      <th>OPAnnualDeductibleAmt</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>CLM67387</td>\n","      <td>PRV57070</td>\n","      <td>9000</td>\n","      <td>1068.0</td>\n","      <td>5789</td>\n","      <td>332</td>\n","      <td>2009-09-09</td>\n","      <td>2009-09-16</td>\n","      <td>2009-09-09</td>\n","      <td>2009-09-16</td>\n","      <td>...</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>21260</td>\n","      <td>2136</td>\n","      <td>120</td>\n","      <td>100</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>CLM31237</td>\n","      <td>PRV54750</td>\n","      <td>14000</td>\n","      <td>1068.0</td>\n","      <td>5939</td>\n","      <td>661</td>\n","      <td>2008-12-25</td>\n","      <td>2009-01-08</td>\n","      <td>2008-12-25</td>\n","      <td>2009-01-08</td>\n","      <td>...</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>22000</td>\n","      <td>2136</td>\n","      <td>1400</td>\n","      <td>840</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>CLM78930</td>\n","      <td>PRV53758</td>\n","      <td>2000</td>\n","      <td>1068.0</td>\n","      <td>4019</td>\n","      <td>241</td>\n","      <td>2009-12-09</td>\n","      <td>2009-12-13</td>\n","      <td>2009-12-09</td>\n","      <td>2009-12-13</td>\n","      <td>...</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>2000</td>\n","      <td>1068</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>CLM56810</td>\n","      <td>PRV55825</td>\n","      <td>16000</td>\n","      <td>1068.0</td>\n","      <td>8208</td>\n","      <td>564</td>\n","      <td>2009-06-23</td>\n","      <td>2009-07-06</td>\n","      <td>2009-06-23</td>\n","      <td>2009-07-06</td>\n","      <td>...</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>23650</td>\n","      <td>2136</td>\n","      <td>40</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>CLM34625</td>\n","      <td>PRV52338</td>\n","      <td>19000</td>\n","      <td>1068.0</td>\n","      <td>4279</td>\n","      <td>880</td>\n","      <td>2009-01-20</td>\n","      <td>2009-01-31</td>\n","      <td>2009-01-20</td>\n","      <td>2009-01-31</td>\n","      <td>...</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>19000</td>\n","      <td>1068</td>\n","      <td>1670</td>\n","      <td>520</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows × 34 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e6489322-4754-49f7-8113-73af042afda2')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-e6489322-4754-49f7-8113-73af042afda2 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-e6489322-4754-49f7-8113-73af042afda2');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-777c07a5-cbc9-4b13-9823-4ded0cb1512b\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-777c07a5-cbc9-4b13-9823-4ded0cb1512b')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-777c07a5-cbc9-4b13-9823-4ded0cb1512b button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df_final_test"}},"metadata":{},"execution_count":23}],"source":["df_final_test.head()"]},{"cell_type":"markdown","metadata":{"id":"QtVD6Qr6nPaz"},"source":["# Random Forest"]},{"cell_type":"code","execution_count":24,"metadata":{"executionInfo":{"elapsed":2722,"status":"ok","timestamp":1732500254122,"user":{"displayName":"Elías Joaquín Yáñez Huerta","userId":"11326424779274297318"},"user_tz":360},"id":"9PilsnkOK0tD"},"outputs":[],"source":["from sklearn.model_selection import train_test_split\n","from sklearn.ensemble import RandomForestClassifier\n","from sklearn.metrics import accuracy_score, classification_report\n","from sklearn.impute import SimpleImputer\n","from sklearn.preprocessing import OneHotEncoder"]},{"cell_type":"code","execution_count":25,"metadata":{"executionInfo":{"elapsed":9,"status":"ok","timestamp":1732500254124,"user":{"displayName":"Elías Joaquín Yáñez Huerta","userId":"11326424779274297318"},"user_tz":360},"id":"4EGmykf5K9bb"},"outputs":[],"source":["# --- Preprocesamiento del conjunto de entrenamiento (df_final) ---\n","# --- 1. Reducir cardinalidad (antes de la imputación) ---\n","def reduce_cardinality(df, column, threshold):\n","    if column != 'PotentialFraud':\n","        df[column] = df[column].fillna('Unknown')\n","    counts = df[column].value_counts()\n","    df[column] = df[column].apply(lambda x: x if counts[x] >= threshold else 'Other')\n","    return df"]},{"cell_type":"code","execution_count":26,"metadata":{"executionInfo":{"elapsed":8,"status":"ok","timestamp":1732500254124,"user":{"displayName":"Elías Joaquín Yáñez Huerta","userId":"11326424779274297318"},"user_tz":360},"id":"7OfnASucLA4v"},"outputs":[],"source":["# --- 2. Imputación ---\n","def impute_data(df):\n","    numerical_cols = df.select_dtypes(include=['number']).columns\n","    categorical_cols = df.select_dtypes(include=['object']).columns\n","\n","    num_imputer = SimpleImputer(strategy='mean')\n","    df[numerical_cols] = num_imputer.fit_transform(df[numerical_cols])\n","\n","    cat_imputer = SimpleImputer(strategy='constant', fill_value='Unknown')\n","    df[categorical_cols] = cat_imputer.fit_transform(df[categorical_cols])\n","\n","    return df"]},{"cell_type":"code","execution_count":27,"metadata":{"executionInfo":{"elapsed":8,"status":"ok","timestamp":1732500254125,"user":{"displayName":"Elías Joaquín Yáñez Huerta","userId":"11326424779274297318"},"user_tz":360},"id":"M624uxjJLEBc"},"outputs":[],"source":["# --- 3. Codificación One-Hot ---\n","def encode_data(df_train, df_test):\n","    categorical_cols = df_train.select_dtypes(include=['object']).columns\n","\n","    encoder = OneHotEncoder(sparse_output=False, handle_unknown='ignore')\n","    encoded_data_train = encoder.fit_transform(df_train[categorical_cols])\n","    encoded_data_test = encoder.transform(df_test[categorical_cols])\n","\n","    encoded_df_train = pd.DataFrame(encoded_data_train, columns=encoder.get_feature_names_out(categorical_cols))\n","    encoded_df_test = pd.DataFrame(encoded_data_test, columns=encoder.get_feature_names_out(categorical_cols))\n","\n","    df_train = pd.concat([df_train, encoded_df_train], axis=1)\n","    df_test = pd.concat([df_test, encoded_df_test], axis=1)\n","\n","    df_train = df_train.drop(categorical_cols, axis=1)\n","    df_test = df_test.drop(categorical_cols, axis=1)\n","\n","    return df_train, df_test"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"pKJJIe9KLGWA"},"outputs":[],"source":["# --- Aplicar preprocesamiento ---\n","def frequency_encoding(df_train, df_test, columns):\n","    for col in columns:\n","        # Calculate frequency in training data\n","        frequencies = df_train[col].value_counts(normalize=True)\n","\n","        # Apply frequency encoding to both train and test data\n","        df_train[col] = df_train[col].map(frequencies)\n","        df_test[col] = df_test[col].map(frequencies).fillna(0)  # Handle unseen values in test data\n","\n","    return df_train, df_test\n","\n","categorical_cols_initial = df_final.select_dtypes(include=['object']).columns\n","\n","# Exclude 'PotentialFraud' from the loop if it's in the list\n","categorical_cols_to_process = [col for col in categorical_cols_initial if col != 'PotentialFraud']\n","\n","for col in categorical_cols_to_process:\n","    df_final = reduce_cardinality(df_final, col, threshold=10)\n","    df_final_test = reduce_cardinality(df_final_test, col, threshold=10)\n","\n","df_final = impute_data(df_final)\n","df_final_test = impute_data(df_final_test)\n","\n","df_final, df_final_test = encode_data(df_final, df_final_test)\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"IDednhVPTxFd"},"outputs":[],"source":["# --- Entrenamiento y predicción ---\n","X = df_final.drop('PotentialFraud', axis=1)\n","y = df_final['PotentialFraud']\n","X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\n","\n","model = RandomForestClassifier(n_estimators=100, max_depth=10, random_state=42)\n","model.fit(X_train, y_train)\n","\n","y_pred = model.predict(X_test)\n","print(f\"Accuracy: {accuracy_score(y_test, y_pred)}\")\n","print(classification_report(y_test, y_pred))"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"j_RMVaIKLIwa"},"outputs":[],"source":["# --- Predicciones en el conjunto de prueba final (df_final_test) ---\n","# Asegúrate de que df_final_test tenga las mismas columnas que X_train/X_test\n","predictions = model.predict(df_final_test)\n","\n","# Agrega las predicciones a df_final_test o crea un nuevo DataFrame\n","df_final_test['PotentialFraud_Prediction'] = predictions"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Z8CZUnn1OqCu"},"outputs":[],"source":["importances = model.feature_importances_\n","feature_names = X.columns\n","feature_importances = pd.DataFrame({'feature': feature_names, 'importance': importances})\n","print(feature_importances.sort_values('importance', ascending=False))"]},{"cell_type":"markdown","metadata":{"id":"NHlpT56FCe9e"},"source":["# XGboost"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"gDt-YO1VMWE2"},"outputs":[],"source":["!pip install xgboost==1.7.5"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"DEk9gpSUMXTI"},"outputs":[],"source":["import xgboost as xgb\n","from sklearn.model_selection import train_test_split\n","from sklearn.metrics import accuracy_score, classification_report"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"ZkqOxZBTMYgI"},"outputs":[],"source":["X = df_final.drop('PotentialFraud', axis=1)\n","y = df_final['PotentialFraud']\n","X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"dfVcMOrIMdSs"},"outputs":[],"source":["# Before creating DMatrix, convert 'PotentialFraud' to numeric:\n","y_train = y_train.map({'No': 0, 'Yes': 1}) # Assuming 'No' and 'Yes' are the values\n","y_test = y_test.map({'No': 0, 'Yes': 1})\n","\n","# Create DMatrix for XGBoost\n","dtrain = xgb.DMatrix(X_train, label=y_train)\n","dtest = xgb.DMatrix(X_test, label=y_test)\n","\n","# Define parameters\n","params = {\n","    'objective': 'binary:logistic',  # For binary classification\n","    'eval_metric': 'logloss',\n","    'max_depth': 3,\n","    'eta': 0.1,\n","}\n","\n","# Train the model\n","model = xgb.train(params, dtrain, num_boost_round=100)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"6raek04PMe9_"},"outputs":[],"source":["y_pred = model.predict(dtest)\n","y_pred_binary = [1 if p >= 0.5 else 0 for p in y_pred]  # Convert probabilities to 0/1\n","\n","accuracy = accuracy_score(y_test, y_pred_binary)\n","print(f\"Accuracy: {accuracy}\")\n","print(classification_report(y_test, y_pred_binary))"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"0TkHQDD2MgH4"},"outputs":[],"source":["# Select only the relevant features (excluding target and prediction columns)\n","features = [col for col in df_final_test.columns if col not in ['PotentialFraud', 'PotentialFraud_Prediction']]\n","\n","# Create DMatrix using the selected features\n","dtest_final = xgb.DMatrix(df_final_test[features])\n","predictions = model.predict(dtest_final)\n","predictions_binary = [1 if p >= 0.5 else 0 for p in predictions]\n","\n","df_final_test['PotentialFraud_Prediction_XGB'] = predictions_binary"]},{"cell_type":"markdown","source":["#Ideas para Reglas Manuales\n","Frecuencia de Tratamientos por Paciente: Si un proveedor tiene una cantidad anormalmente alta de tratamientos administrados por paciente (comparado con otros proveedores), podría ser un indicador de fraude.\n","\n","Reembolsos Totales por Paciente: Un proveedor que obtiene un reembolso total alto por cada paciente (especialmente si el paciente requiere pocos tratamientos) podría ser sospechoso.\n","\n","Distribución de Condiciones Crónicas: Si un proveedor tiene una gran cantidad de pacientes con condiciones crónicas específicas que usualmente requieren tratamientos caros, esto podría ser inusual si se desvía mucho del patrón general.\n","\n","Duración Promedio de las Reclamaciones: Un proveedor que tiene reclamaciones de duración más prolongada (días entre ClaimStartDt y ClaimEndDt) podría estar tratando de aumentar la duración de las reclamaciones para incrementar el reembolso.\n","\n","Uso de Médicos y Diagnósticos Repetitivos: Si un proveedor usa frecuentemente los mismos médicos o diagnósticos, esto podría indicar un intento de presentar reclamaciones con un patrón sospechoso."],"metadata":{"id":"FGlx18EQKKQD"}},{"cell_type":"code","source":["# Feecuencia de Tratamientos por Paciente\n","\n","# 1. Agrupar por proveedor y contar las reclamaciones\n","tratamientos_por_proveedor = df_final.groupby('Provider')['ClaimID'].count().reset_index()\n","tratamientos_por_proveedor.rename(columns={'ClaimID': 'NumTratamientos'}, inplace=True)\n","\n","# 2. Calcular la frecuencia promedio de tratamientos (reclamaciones) por proveedor\n","# Dividir el número de tratamientos por un número representativo de pacientes por proveedor\n","#  (puedes usar una estimación si no tienes la información exacta)\n","# Ejemplo: Suponiendo 10 pacientes por proveedor en promedio\n","tratamientos_por_proveedor['FrecuenciaPromedio'] = tratamientos_por_proveedor['NumTratamientos'] / 10\n","\n","# 3. Identificar proveedores con frecuencia de tratamientos por encima de un umbral\n","# (por ejemplo, 2 desviaciones estándar por encima de la media)\n","umbral = tratamientos_por_proveedor['FrecuenciaPromedio'].mean() + 2 * tratamientos_por_proveedor['FrecuenciaPromedio'].std()\n","proveedores_sospechosos = tratamientos_por_proveedor[tratamientos_por_proveedor['FrecuenciaPromedio'] > umbral]['Provider']\n","\n","# 4. Mostrar los proveedores sospechosos\n","print(\"Proveedores con frecuencia de tratamientos sospechosa:\")\n","print(proveedores_sospechosos)"],"metadata":{"id":"gorcePR4K_UX"},"execution_count":null,"outputs":[]}],"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyN+YlXS3bydelQk8fVjdsPP"},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"nbformat":4,"nbformat_minor":0}