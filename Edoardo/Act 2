{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyMAk6K6VY+pU2Re43xv5a9S"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["ID - STREAM - SLOPE - ELEVATION - VEGETATION\n","\n","1 ---- false ------ steep -------- high ---------- chapparal\n","\n","2 ---- true ----- moderate ----- low ----------- riparian\n","\n","3 ---- true ------- steep ------ medium ------- riparian\n","\n","4 ---- false ------ steep ----- medium ------- chapparal\n","\n","5 ---- false ------- flat ----------- high ---------- conifer\n","\n","6 ---- true -------- steep ----- highest -------- conifer\n","\n","7 ---- true -------- steep -------- high ---------- chapparal\n"],"metadata":{"id":"q2RnbYC_N5WP"}},{"cell_type":"markdown","source":["Calcular la proporción de cada clase:\n","\n","Chapparal: 3/7\n","Riparian: 2/7\n","Conifer: 2/7\n","\n","Calcular la entropía para cada clase:\n","\n","Entropía(Chapparal) = - (3/7) * log2(3/7)\n","Entropía(Riparian) = - (2/7) * log2(2/7)\n","Entropía(Conifer) = - (2/7) * log2(2/7)\n","\n","Sumar las entropías ponderadas por la proporción de cada clase para obtener la entropía total:\n","\n","Entropía Total = Entropía(Chapparal) + Entropía(Riparian) + Entropía(Conifer)"],"metadata":{"id":"ORY39Z55EXoT"}},{"cell_type":"code","source":["import math\n","\n","def calculate_entropy(probabilities):\n","  \"\"\"Calcula la entropía dadas las probabilidades de cada clase.\"\"\"\n","  entropy = 0\n","  for p in probabilities:\n","    if p > 0:\n","      entropy -= p * math.log2(p)\n","  return entropy"],"metadata":{"id":"g1SqTSqdEX8E","executionInfo":{"status":"ok","timestamp":1728527816100,"user_tz":360,"elapsed":193,"user":{"displayName":"Elías Joaquín Yáñez Huerta","userId":"11326424779274297318"}}},"execution_count":13,"outputs":[]},{"cell_type":"code","source":["# Proporciones de cada clase\n","chapparal_prob = 3/7\n","riparian_prob = 2/7\n","conifer_prob = 2/7\n","\n","# Calcular la entropía total\n","total_entropy = calculate_entropy([chapparal_prob, riparian_prob, conifer_prob])\n","\n","print(f\"Entropía total: {total_entropy}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"AFl4mGDjFZ8d","executionInfo":{"status":"ok","timestamp":1728527816286,"user_tz":360,"elapsed":17,"user":{"displayName":"Elías Joaquín Yáñez Huerta","userId":"11326424779274297318"}},"outputId":"b8be7822-f1f2-4f27-ce39-b23bc6af35bb"},"execution_count":14,"outputs":[{"output_type":"stream","name":"stdout","text":["Entropía total: 1.5566567074628228\n"]}]},{"cell_type":"markdown","source":["Calcular la entropía para \"Stream = False\":\n","\n","+ Tenemos 3 instancias con \"Stream = False\": 2 chaparral, 0 riparian, 1 conifer.\n","+ Probabilidades: chaparral: 2/3, riparian: 0/3, conifer: 1/3\n","+ Entropía(Stream=False) = - (2/3) * log2(2/3) - (0/3) * log2(0/3) - (1/3) * log2(1/3)\n","\n","Calcular la entropía para \"Stream = True\":\n","\n","+ Tenemos 4 instancias con \"Stream = True\": 1 chaparral, 2 riparian, 1 conifer.\n","+ Probabilidades: chaparral: 1/4, riparian: 2/4, conifer: 1/4\n","+ Entropía(Stream=True) = - (1/4) * log2(1/4) - (2/4) * log2(2/4) - (1/4) * log2(1/4)\n","\n","Calcular la entropía ponderada de \"Stream\":\n","\n","+ Probabilidad de \"Stream = False\": 3/7\n","+ Probabilidad de \"Stream = True\": 4/7\n","+ Entropía(Stream) = (3/7) * Entropía(Stream=False) + (4/7) * Entropía(Stream=True)"],"metadata":{"id":"aP5Wp1dUFd18"}},{"cell_type":"code","source":["# Entropía para Stream = False\n","entropy_false = calculate_entropy([2/3, 0/3, 1/3])\n","\n","# Entropía para Stream = True\n","entropy_true = calculate_entropy([1/4, 2/4, 1/4])\n","\n","# Entropía ponderada de Stream\n","entropy_stream = (3/7) * entropy_false + (4/7) * entropy_true\n","\n","print(f\"Entropía False: {entropy_false}\")\n","print(f\"Entropía True: {entropy_true}\")\n","print(f\"Entropía de Stream: {entropy_stream}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"QWUam2kBFeVI","executionInfo":{"status":"ok","timestamp":1728527816287,"user_tz":360,"elapsed":16,"user":{"displayName":"Elías Joaquín Yáñez Huerta","userId":"11326424779274297318"}},"outputId":"a9468e77-9622-4480-ae4c-55563f6907ab"},"execution_count":15,"outputs":[{"output_type":"stream","name":"stdout","text":["Entropía False: 0.9182958340544896\n","Entropía True: 1.5\n","Entropía de Stream: 1.2506982145947811\n"]}]},{"cell_type":"markdown","source":["Calcular la entropía para \"Slope = steep\":\n","\n","+ Tenemos 5 instancias con \"Slope = steep\": 3 chaparral, 1 riparian, 1 conifer.\n","+ Probabilidades: chaparral: 3/5, riparian: 1/5, conifer: 1/5\n","+ Entropía(Slope=steep) = - (3/5) * log2(3/5) - (1/5) * log2(1/5) - (1/5) * log2(1/5)\n","\n","Calcular la entropía para \"Slope = moderate\":\n","\n","+ Tenemos 1 instancia con \"Slope = moderate\": 0 chaparral, 1 riparian, 0 conifer.\n","+ Probabilidades: chaparral: 0/1, riparian: 1/1, conifer: 0/1\n","+ Entropía(Slope=moderate) = - (0/1) * log2(0/1) - (1/1) * log2(1/1) - (0/1) * log2(0/1)\n","\n","Calcular la entropía para \"Slope = flat\":\n","\n","+ Tenemos 1 instancia con \"Slope = flat\": 0 chaparral, 0 riparian, 1 conifer.\n","+ Probabilidades: chaparral: 0/1, riparian: 0/1, conifer: 1/1\n","+ Entropía(Slope=flat) = - (0/1) * log2(0/1) - (0/1) * log2(0/1) - (1/1) * log2(1/1)\n","\n","Calcular la entropía ponderada de \"Slope\":\n","\n","+ Probabilidad de \"Slope = steep\": 5/7\n","+ Probabilidad de \"Slope = moderate\": 1/7\n","+ Probabilidad de \"Slope = flat\": 1/7\n","+ Entropía(Slope) = (5/7) * Entropía(Slope=steep) + (1/7) * Entropía(Slope=moderate) + (1/7) * Entropía(Slope=flat)"],"metadata":{"id":"My586p3AHl4k"}},{"cell_type":"code","source":["# Entropía para Slope = steep\n","entropy_steep = calculate_entropy([3/5, 1/5, 1/5])\n","\n","# Entropía para Slope = moderate\n","entropy_moderate = calculate_entropy([0/1, 1/1, 0/1])\n","\n","# Entropía para Slope = flat\n","entropy_flat = calculate_entropy([0/1, 0/1, 1/1])\n","\n","# Entropía ponderada de Slope\n","entropy_slope = (5/7) * entropy_steep + (1/7) * entropy_moderate + (1/7) * entropy_flat\n","\n","print(f\"Entropía de Steep: {entropy_steep}\")\n","print(f\"Entropía de Moderate: {entropy_moderate}\")\n","print(f\"Entropía de Flat: {entropy_flat}\")\n","print(f\"Entropía de Slope: {entropy_slope}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ZT1cOFC_H3df","executionInfo":{"status":"ok","timestamp":1728527816287,"user_tz":360,"elapsed":15,"user":{"displayName":"Elías Joaquín Yáñez Huerta","userId":"11326424779274297318"}},"outputId":"c7d1ffa0-51a4-49cb-e8cd-0ed645afea9a"},"execution_count":16,"outputs":[{"output_type":"stream","name":"stdout","text":["Entropía de Steep: 1.3709505944546687\n","Entropía de Moderate: 0.0\n","Entropía de Flat: 0.0\n","Entropía de Slope: 0.9792504246104776\n"]}]},{"cell_type":"markdown","source":["Calcular la entropía para \"Elevation = low\":\n","\n","+ Tenemos 1 instancia con \"Elevation = low\": 0 chaparral, 1 riparian, 0 conifer.\n","+ Probabilidades: chaparral: 0/1, riparian: 1/1, conifer: 0/1\n","+ Entropía(Elevation=low) = - (0/1) * log2(0/1) - (1/1) * log2(1/1) - (0/1) * log2(0/1)\n","\n","Calcular la entropía para \"Elevation = medium\":\n","\n","+ Tenemos 2 instancias con \"Elevation = medium\": 1 chaparral, 1 riparian, 0 conifer.\n","+ Probabilidades: chaparral: 1/2, riparian: 1/2, conifer: 0/2\n","+ Entropía(Elevation=medium) = - (1/2) * log2(1/2) - (1/2) * log2(1/2) - (0/2) * log2(0/2)\n","\n","Calcular la entropía para \"Elevation = high\":\n","\n","+ Tenemos 3 instancias con \"Elevation = high\": 2 chaparral, 0 riparian, 1 conifer.\n","+ Probabilidades: chaparral: 2/3, riparian: 0/3, conifer: 1/3\n","+ Entropía(Elevation=high) = - (2/3) * log2(2/3) - (0/3) * log2(0/3) - (1/3) * log2(1/3)\n","\n","Calcular la entropía para \"Elevation = highest\":\n","\n","+ Tenemos 1 instancia con \"Elevation = highest\": 0 chaparral, 0 riparian, 1 conifer.\n","+ Probabilidades: chaparral: 0/1, riparian: 0/1, conifer: 1/1\n","+ Entropía(Elevation=highest) = - (0/1) * log2(0/1) - (0/1) * log2(0/1) - (1/1) * log2(1/1)\n","\n","Calcular la entropía ponderada de \"Elevation\":\n","\n","+ Probabilidad de \"Elevation = low\": 1/7\n","+ Probabilidad de \"Elevation = medium\": 2/7\n","+ Probabilidad de \"Elevation = high\": 3/7\n","+ Probabilidad de \"Elevation = highest\": 1/7\n","+ Entropía(Elevation) = (1/7) * Entropía(Elevation=low) + (2/7) * Entropía(Elevation=medium) + (3/7) * Entropía(Elevation=high) + (1/7) * Entropía(Elevation=highest)"],"metadata":{"id":"G3DO8HIIJA6x"}},{"cell_type":"code","source":["# Entropía para Elevation = low (será 0)\n","entropy_low = calculate_entropy([0/1, 1/1, 0/1])\n","\n","# Entropía para Elevation = medium\n","entropy_medium = calculate_entropy([1/2, 1/2, 0/2])\n","\n","# Entropía para Elevation = high\n","entropy_high = calculate_entropy([2/3, 0/3, 1/3])\n","\n","# Entropía para Elevation = highest (será 0)\n","entropy_highest = calculate_entropy([0/1, 0/1, 1/1])\n","\n","# Entropía ponderada de Elevation\n","entropy_elevation = (1/7) * entropy_low + (2/7) * entropy_medium + (3/7) * entropy_high + (1/7) * entropy_highest\n","\n","print(f\"Entropía de Low: {entropy_low}\")\n","print(f\"Entropía de Medium: {entropy_medium}\")\n","print(f\"Entropía de High: {entropy_high}\")\n","print(f\"Entropía de Highest: {entropy_highest}\")\n","print(f\"Entropía de Elevation: {entropy_elevation}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"F4X0j8a-JTqS","executionInfo":{"status":"ok","timestamp":1728527816287,"user_tz":360,"elapsed":13,"user":{"displayName":"Elías Joaquín Yáñez Huerta","userId":"11326424779274297318"}},"outputId":"9404a455-977d-4956-d95e-51fe7c66f3d5"},"execution_count":17,"outputs":[{"output_type":"stream","name":"stdout","text":["Entropía de Low: 0.0\n","Entropía de Medium: 1.0\n","Entropía de High: 0.9182958340544896\n","Entropía de Highest: 0.0\n","Entropía de Elevation: 0.6792696431662097\n"]}]},{"cell_type":"code","source":["Ganancia_Stream = total_entropy - entropy_stream\n","Ganancia_Slope = total_entropy - entropy_slope\n","Ganancia_Elevation = total_entropy - entropy_elevation\n","\n","print(f\"Ganancia de Stream: {Ganancia_Stream}\")\n","print(f\"Ganancia de Slope: {Ganancia_Slope}\")\n","print(f\"Ganancia de Elevation: {Ganancia_Elevation}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"TXK8-xb2LUa2","executionInfo":{"status":"ok","timestamp":1728527816287,"user_tz":360,"elapsed":11,"user":{"displayName":"Elías Joaquín Yáñez Huerta","userId":"11326424779274297318"}},"outputId":"667f2aae-8bef-483b-e729-6fe84ef8ff17"},"execution_count":18,"outputs":[{"output_type":"stream","name":"stdout","text":["Ganancia de Stream: 0.30595849286804166\n","Ganancia de Slope: 0.5774062828523452\n","Ganancia de Elevation: 0.8773870642966131\n"]}]},{"cell_type":"markdown","source":["Rama \"Elevation = medium\":\n","\n","1. Datos relevantes:\n","\n","Tenemos 2 ejemplos con \"Elevation = medium\": 1 chaparral, 1 riparian, 0 conifer (110).\n","2. Atributos restantes:\n","\n","\"Stream\" y \"Slope\" son los atributos que aún no hemos usado en esta rama.\n","3. Cálculo de entropía para \"Stream\":\n","\n","Stream = True: 1 ejemplo (010) -> Probabilidades: [0/1, 1/1, 0/1] -> Entropía = 0\n","Stream = False: 1 ejemplo (100) -> Probabilidades: [1/1, 0/1, 0/1] -> Entropía = 0\n","Entropía ponderada de \"Stream\": (1/2) * 0 + (1/2) * 0 = 0\n","4. Cálculo de entropía para \"Slope\":\n","\n","Slope = steep: 2 ejemplos (110) -> Probabilidades: [1/2, 1/2, 0/2] -> Entropía = 1\n","Otros valores de \"Slope\" no tienen ejemplos en esta rama, por lo que su entropía es 0.\n","Entropía ponderada de \"Slope\": (2/2) * 1 + (0/2) * 0 + (0/2) * 0 = 1\n","5. Cálculo de la ganancia de información:\n","\n","Entropía total para \"Elevation = medium\": - (1/2) * log2(1/2) - (1/2) * log2(1/2) - (0/2) * log2(0/2) = 1\n","Ganancia de información (Stream) = Entropía total - Entropía(Stream) = 1 - 0 = 1\n","Ganancia de información (Slope) = Entropía total - Entropía(Slope) = 1 - 1 = 0\n","6. Selección del mejor atributo:\n","\n","\"Stream\" tiene la mayor ganancia de información (1), por lo que es el mejor atributo para el siguiente nodo en la rama \"Elevation = medium\"."],"metadata":{"id":"_rt4ByXYQq8E"}},{"cell_type":"code","source":["# Entropía para Stream = True en Elevation = medium\n","entropy_stream_true = calculate_entropy([0/1, 1/1, 0/1])\n","\n","# Entropía para Stream = False en Elevation = medium\n","entropy_stream_false = calculate_entropy([1/1, 0/1, 0/1])\n","\n","# Entropía ponderada de Stream en Elevation = medium\n","entropy_stream = (1/2) * entropy_stream_true + (1/2) * entropy_stream_false\n","\n","# Entropía para Slope = steep en Elevation = medium\n","entropy_slope_steep = calculate_entropy([1/2, 1/2, 0/2])\n","\n","# Entropía ponderada de Slope en Elevation = medium\n","entropy_slope = (2/2) * entropy_slope_steep\n","\n","# Entropía total para Elevation = medium\n","total_entropy_medium = calculate_entropy([1/2, 1/2, 0/2])\n","\n","# Ganancia de información\n","gain_stream = total_entropy_medium - entropy_stream\n","gain_slope = total_entropy_medium - entropy_slope\n","\n","print(f\"Ganancia de información (Stream): {gain_stream}\")\n","print(f\"Ganancia de información (Slope): {gain_slope}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Pyxj27Z5Q2YX","executionInfo":{"status":"ok","timestamp":1728527816287,"user_tz":360,"elapsed":10,"user":{"displayName":"Elías Joaquín Yáñez Huerta","userId":"11326424779274297318"}},"outputId":"9665792b-c69f-4d45-b1ef-f59a40c73ad5"},"execution_count":19,"outputs":[{"output_type":"stream","name":"stdout","text":["Ganancia de información (Stream): 1.0\n","Ganancia de información (Slope): 0.0\n"]}]},{"cell_type":"markdown","source":["Rama \"Elevation = high\":\n","\n","Cálculo de entropía para \"Stream\":\n","\n","+ Stream = False: 1 chaparral, 1 conifer (101).\n","+ Probabilidades: [1/2, 0/2, 1/2]\n","+ Entropía = calculate_entropy([1/2, 0/2, 1/2]) = 1\n","+ Stream = True: 1 chaparral, 0 conifer (100).\n","+ Probabilidades: [1/1, 0/1, 0/1]\n","+ Entropía = 0\n","+ Entropía ponderada de \"Stream\": (2/3) * 0 + (1/3) * 1 = 1/3\n","\n","Cálculo de entropía para \"Slope\":\n","\n","+ Slope = steep: 2 chaparral, 0 conifer (200).\n","+ Probabilidades: [2/2,0/2,0/2]\n","+ Entropía = 0\n","+ Slope = moderate: No tiene ejemplos, entropía = 0\n","+ Slope = flat: 0 chaparral, 1 conifer (001)\n","+ Probabilidades: [0/1,0/1,1/1]\n","+ Entropía = 0\n","+ Entropía ponderada de \"Slope\": (2/3) * 0 + (0/3) * 0 + (1/3) * 0 = 0\n","\n","Cálculo de la ganancia de información:\n","\n","+ Entropía total para \"Elevation = high\": calculate_entropy([2/3,0/3,1/3])\n","+ Ganancia de información (Stream) = calculate_entropy([2/3,0/3,1/3]) - (1/3) = calculate_entropy([2/3,0/3,1/3]) - (1/3)\n","+ Ganancia de información (Slope) = calculate_entropy([2/3,0/3,1/3]) - 0 = calculate_entropy([2/3,0/3,1/3])"],"metadata":{"id":"5H8OneWPR9lE"}},{"cell_type":"code","source":["# Entropía para Stream = False en Elevation = high\n","entropy_stream_false = calculate_entropy([1/3, 0/3, 1/3])\n","\n","# Entropía para Stream = True en Elevation = high\n","entropy_stream_true = calculate_entropy([1/3,0/3,0/3])\n","\n","# Entropía ponderada de Stream en Elevation = high\n","entropy_stream = (2/3) * entropy_stream_false + (1/3) * entropy_stream_true\n","\n","# Entropía para Slope = steep en Elevation = high\n","entropy_slope_steep = calculate_entropy([2/3,0/3,0/3])\n","\n","#Entropía para Slope = moderate en Elevation = high\n","entropy_slope_moderate = 0\n","\n","#Entropía para Slope = flat en Elevation = high\n","entropy_slope_flat = calculate_entropy([0/3,0/3,1/3])\n","\n","# Entropía ponderada de Slope en Elevation = high\n","entropy_slope = (3/3) * entropy_slope_steep + (0/3) * entropy_slope_moderate + (0/3) * entropy_slope_flat\n","\n","# Entropía total para Elevation = high\n","total_entropy_high = calculate_entropy([2/3, 0/3, 1/3])\n","\n","# Ganancia de informacion\n","gain_stream = total_entropy_high - entropy_stream\n","gain_slope = total_entropy_high - entropy_slope\n","\n","print(f\"Ganancia de información (Stream): {gain_stream}\")\n","print(f\"Ganancia de información (Slope): {gain_slope}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"YlEbPtjQR8Nw","executionInfo":{"status":"ok","timestamp":1728528408644,"user_tz":360,"elapsed":155,"user":{"displayName":"Elías Joaquín Yáñez Huerta","userId":"11326424779274297318"}},"outputId":"15212e33-5898-40db-952c-4a595218a6bd"},"execution_count":23,"outputs":[{"output_type":"stream","name":"stdout","text":["Ganancia de información (Stream): 0.03776111143162508\n","Ganancia de información (Slope): 0.5283208335737187\n"]}]}]}