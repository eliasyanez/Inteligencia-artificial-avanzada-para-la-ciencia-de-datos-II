{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyOZOraMBn2nkLDvFDiec7Mu"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["House Prices - Advanced Regression Techniques"],"metadata":{"id":"un1pBetEoEP-"}},{"cell_type":"code","execution_count":2,"metadata":{"id":"D2qbtP4iZqm_","executionInfo":{"status":"ok","timestamp":1729127891892,"user_tz":360,"elapsed":17093,"user":{"displayName":"Elías Joaquín Yáñez Huerta","userId":"11326424779274297318"}}},"outputs":[],"source":["import pandas as pd\n","import torch\n","import torch.nn as nn\n","import torch.optim as optim\n","from sklearn.model_selection import train_test_split\n","from sklearn.preprocessing import StandardScaler\n","from sklearn.linear_model import LinearRegression\n","from sklearn.tree import DecisionTreeRegressor"]},{"cell_type":"code","source":["from google.colab import drive\n","drive.mount('/content/drive')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ZS4ISCrSbTrs","executionInfo":{"status":"ok","timestamp":1729127912146,"user_tz":360,"elapsed":20270,"user":{"displayName":"Elías Joaquín Yáñez Huerta","userId":"11326424779274297318"}},"outputId":"0b66981c-3a6e-4db9-be72-f469f618a27a"},"execution_count":3,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}]},{"cell_type":"code","source":["train = pd.read_csv('/content/drive/My Drive/ITD/Int Artificial Avanzada/Parte 2/Pytorch/House prices/train.csv')\n","test = pd.read_csv('/content/drive/My Drive/ITD/Int Artificial Avanzada/Parte 2/Pytorch/House prices/test.csv')"],"metadata":{"id":"npgI3eJ8f2-P","executionInfo":{"status":"ok","timestamp":1729127913766,"user_tz":360,"elapsed":1627,"user":{"displayName":"Elías Joaquín Yáñez Huerta","userId":"11326424779274297318"}}},"execution_count":4,"outputs":[]},{"cell_type":"code","source":["print(train.head())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"cCDIMaFbCXEr","executionInfo":{"status":"ok","timestamp":1729127913767,"user_tz":360,"elapsed":12,"user":{"displayName":"Elías Joaquín Yáñez Huerta","userId":"11326424779274297318"}},"outputId":"eda908f3-32db-4d7b-9ad1-2c943535bbcb"},"execution_count":5,"outputs":[{"output_type":"stream","name":"stdout","text":["   Id  MSSubClass MSZoning  LotFrontage  LotArea Street Alley LotShape  \\\n","0   1          60       RL         65.0     8450   Pave   NaN      Reg   \n","1   2          20       RL         80.0     9600   Pave   NaN      Reg   \n","2   3          60       RL         68.0    11250   Pave   NaN      IR1   \n","3   4          70       RL         60.0     9550   Pave   NaN      IR1   \n","4   5          60       RL         84.0    14260   Pave   NaN      IR1   \n","\n","  LandContour Utilities  ... PoolArea PoolQC Fence MiscFeature MiscVal MoSold  \\\n","0         Lvl    AllPub  ...        0    NaN   NaN         NaN       0      2   \n","1         Lvl    AllPub  ...        0    NaN   NaN         NaN       0      5   \n","2         Lvl    AllPub  ...        0    NaN   NaN         NaN       0      9   \n","3         Lvl    AllPub  ...        0    NaN   NaN         NaN       0      2   \n","4         Lvl    AllPub  ...        0    NaN   NaN         NaN       0     12   \n","\n","  YrSold  SaleType  SaleCondition  SalePrice  \n","0   2008        WD         Normal     208500  \n","1   2007        WD         Normal     181500  \n","2   2008        WD         Normal     223500  \n","3   2006        WD        Abnorml     140000  \n","4   2008        WD         Normal     250000  \n","\n","[5 rows x 81 columns]\n"]}]},{"cell_type":"code","source":["# 1. Manejo de valores faltantes\n","# Reemplazar valores nulos con la mediana para variables numéricas\n","numerical_features = train.select_dtypes(include=['number']).columns\n","train[numerical_features] = train[numerical_features].fillna(train[numerical_features].median())\n","\n","# Reemplazar valores nulos con la moda para variables categóricas\n","categorical_features = train.select_dtypes(exclude=['number']).columns\n","train[categorical_features] = train[categorical_features].fillna(train[categorical_features].mode().iloc[0])\n","\n","# 2. Codificación de variables categóricas\n","train = pd.get_dummies(train)\n","\n","# 3. Escalamiento de variables numéricas\n","# Separa las características y la variable objetivo\n","X = train.drop('SalePrice', axis=1)\n","y = train['SalePrice']\n","\n","# Divide los datos en conjuntos de entrenamiento y prueba\n","X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\n","\n","# Escala las características del conjunto de entrenamiento\n","scaler = StandardScaler()\n","X_train_scaled = scaler.fit_transform(X_train)\n","\n","# Escala las características del conjunto de prueba (usando la misma escala del conjunto de entrenamiento)\n","X_test_scaled = scaler.transform(X_test)\n","\n","# Convierte los datos escalados a DataFrames de pandas\n","X_train_scaled = pd.DataFrame(X_train_scaled, columns=X_train.columns)\n","X_test_scaled = pd.DataFrame(X_test_scaled, columns=X_test.columns)"],"metadata":{"id":"s_UzMu5wELb9","executionInfo":{"status":"ok","timestamp":1729127914001,"user_tz":360,"elapsed":243,"user":{"displayName":"Elías Joaquín Yáñez Huerta","userId":"11326424779274297318"}}},"execution_count":6,"outputs":[]},{"cell_type":"code","source":["# Define el modelo de la red neuronal\n","model = nn.Sequential(\n","    nn.Linear(X_train_scaled.shape[1], 128),\n","    nn.ReLU(),\n","    nn.Linear(128, 64),\n","    nn.ReLU(),\n","    nn.Linear(64, 1)\n",")\n","\n","# Define la función de pérdida y el optimizador\n","criterion = nn.MSELoss()\n","optimizer = optim.Adam(model.parameters(), lr=0.001)\n","\n","# Convierte los datos a tensores de PyTorch\n","X_train_tensor = torch.tensor(X_train_scaled.values, dtype=torch.float32)\n","y_train_tensor = torch.tensor(y_train.values, dtype=torch.float32).reshape(-1, 1)\n","\n","# Entrena el modelo\n","epochs = 100\n","for epoch in range(epochs):\n","    # Forward pass\n","    y_pred = model(X_train_tensor)\n","    loss = criterion(y_pred, y_train_tensor)\n","\n","    # Backward pass y optimización\n","    optimizer.zero_grad()\n","    loss.backward()\n","    optimizer.step()\n","\n","    if (epoch+1) % 10 == 0:\n","        print(f'Epoch [{epoch+1}/{epochs}], Loss: {loss.item():.4f}')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"UV2KbQ9TEk08","executionInfo":{"status":"ok","timestamp":1729127920814,"user_tz":360,"elapsed":6816,"user":{"displayName":"Elías Joaquín Yáñez Huerta","userId":"11326424779274297318"}},"outputId":"cfb5c04a-1766-4aad-ef64-4ae9fe3e8e5f"},"execution_count":7,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch [10/100], Loss: 38885355520.0000\n","Epoch [20/100], Loss: 38884651008.0000\n","Epoch [30/100], Loss: 38882967552.0000\n","Epoch [40/100], Loss: 38879481856.0000\n","Epoch [50/100], Loss: 38873112576.0000\n","Epoch [60/100], Loss: 38862561280.0000\n","Epoch [70/100], Loss: 38846287872.0000\n","Epoch [80/100], Loss: 38822637568.0000\n","Epoch [90/100], Loss: 38789799936.0000\n","Epoch [100/100], Loss: 38745870336.0000\n"]}]},{"cell_type":"code","source":["# Obtén las predicciones de la red neuronal en el conjunto de entrenamiento\n","with torch.no_grad():\n","    y_pred_nn = model(X_train_tensor).numpy().flatten()\n","\n","# 2. Regresión lineal\n","linear_model = LinearRegression()\n","linear_model.fit(X_train_scaled, y_train)\n","y_pred_linear = linear_model.predict(X_train_scaled)"],"metadata":{"id":"LP6kRxZdFUEE","executionInfo":{"status":"ok","timestamp":1729127922699,"user_tz":360,"elapsed":1890,"user":{"displayName":"Elías Joaquín Yáñez Huerta","userId":"11326424779274297318"}}},"execution_count":8,"outputs":[]},{"cell_type":"code","source":["# 3. Árbol de decisión\n","tree_model = DecisionTreeRegressor()\n","tree_model.fit(X_train_scaled, y_train)\n","y_pred_tree = tree_model.predict(X_train_scaled)"],"metadata":{"id":"2joewLhNFWrL","executionInfo":{"status":"ok","timestamp":1729127922945,"user_tz":360,"elapsed":250,"user":{"displayName":"Elías Joaquín Yáñez Huerta","userId":"11326424779274297318"}}},"execution_count":9,"outputs":[]},{"cell_type":"code","source":["# Combina las predicciones (promedio simple)\n","y_pred_combined = (y_pred_nn + y_pred_linear + y_pred_tree) / 3"],"metadata":{"id":"P1_pdxZQFYrl","executionInfo":{"status":"ok","timestamp":1729127922946,"user_tz":360,"elapsed":9,"user":{"displayName":"Elías Joaquín Yáñez Huerta","userId":"11326424779274297318"}}},"execution_count":10,"outputs":[]},{"cell_type":"code","source":["from sklearn.metrics import mean_squared_error, mean_absolute_error\n","\n","# Calcula el RMSE\n","rmse = mean_squared_error(y_train, y_pred_combined, squared=False)\n","\n","# Calcula el MAE\n","mae = mean_absolute_error(y_train, y_pred_combined)\n","\n","print(f'RMSE: {rmse:.4f}')\n","print(f'MAE: {mae:.4f}')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"d-nZC7C8FlQS","executionInfo":{"status":"ok","timestamp":1729127922947,"user_tz":360,"elapsed":9,"user":{"displayName":"Elías Joaquín Yáñez Huerta","userId":"11326424779274297318"}},"outputId":"aa06b541-cfa6-4754-fc76-5a5dcf7e5d61"},"execution_count":11,"outputs":[{"output_type":"stream","name":"stdout","text":["RMSE: 66573.2728\n","MAE: 60377.8083\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_regression.py:492: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.\n","  warnings.warn(\n"]}]},{"cell_type":"markdown","source":["Red Neuronal\n","\n","Goal\n","It is your job to predict the sales price for each house. For each Id in the test set, you must predict the value of the SalePrice variable.\n","\n","Metric\n","Submissions are evaluated on Root-Mean-Squared-Error (RMSE) between the logarithm of the predicted value and the logarithm of the observed sales price. (Taking logs means that errors in predicting expensive houses and cheap houses will affect the result equally.)\n","\n","Submission File Format\n","The file should contain a header and have the following format:\n","\n","Id,SalePrice\n","1461,169000.1\n","1462,187724.1233\n","1463,175221\n","etc."],"metadata":{"id":"PUTNsA6TnxIS"}},{"cell_type":"code","source":["# Preprocesa los datos de prueba de la misma manera que los datos de entrenamiento\n","numerical_features_test = test.select_dtypes(include=['number']).columns\n","test[numerical_features_test] = test[numerical_features_test].fillna(test[numerical_features_test].median())\n","categorical_features_test = test.select_dtypes(exclude=['number']).columns\n","test[categorical_features_test] = test[categorical_features_test].fillna(test[categorical_features_test].mode().iloc[0])\n","test = pd.get_dummies(test)\n","\n","\n","# Asegúrate de que test tenga las mismas columnas que X_train_scaled\n","missing_cols = set(X_train_scaled.columns) - set(test.columns)\n","for c in missing_cols:\n","    test[c] = 0\n","test = test[X_train_scaled.columns]\n","\n","# Escala los datos de prueba utilizando el mismo scaler que se usó para los datos de entrenamiento\n","X_test_scaled_final = scaler.transform(test)\n","X_test_scaled_final = pd.DataFrame(X_test_scaled_final, columns=test.columns)\n","\n","# Obtén las predicciones para los datos de prueba\n","X_test_tensor = torch.tensor(X_test_scaled_final.values, dtype=torch.float32)\n","with torch.no_grad():\n","    y_pred_nn_test = model(X_test_tensor).numpy().flatten()\n","y_pred_linear_test = linear_model.predict(X_test_scaled_final)\n","y_pred_tree_test = tree_model.predict(X_test_scaled_final)\n","y_pred_combined_test = (y_pred_nn_test + y_pred_linear_test + y_pred_tree_test) / 3\n","\n","\n","# Crea un DataFrame con las predicciones y el ID\n","submission = pd.DataFrame({'Id': test['Id'], 'SalePrice': y_pred_combined_test})\n","\n","# Guarda las predicciones en un archivo CSV\n","submission.to_csv('submission.csv', index=False)"],"metadata":{"id":"bJO0lMJQDQ-0","executionInfo":{"status":"ok","timestamp":1729127923134,"user_tz":360,"elapsed":194,"user":{"displayName":"Elías Joaquín Yáñez Huerta","userId":"11326424779274297318"}}},"execution_count":12,"outputs":[]}]}